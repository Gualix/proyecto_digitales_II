/* Generated by Yosys 0.9 (git sha1 1979e0b) */

(* top =  1  *)
(* src = "synth.v:3" *)
module synth(Salida_estructural, validsalida, validEntrada0, validEntrada1, validEntrada2, validEntrada3, Entrada0, Entrada1, Entrada2, Entrada3, clk_4f, clk_2f, clk_f, reset);
  (* src = "synth.v:17" *)
  input [7:0] Entrada0;
  (* src = "synth.v:18" *)
  input [7:0] Entrada1;
  (* src = "synth.v:19" *)
  input [7:0] Entrada2;
  (* src = "synth.v:20" *)
  input [7:0] Entrada3;
  (* src = "synth.v:29" *)
  wire [7:0] Salida0;
  (* src = "synth.v:29" *)
  wire [7:0] Salida1;
  (* src = "synth.v:5" *)
  output [7:0] Salida_estructural;
  (* src = "synth.v:24" *)
  input clk_2f;
  (* src = "synth.v:23" *)
  input clk_4f;
  (* src = "synth.v:25" *)
  input clk_f;
  (* src = "synth.v:26" *)
  input reset;
  (* src = "synth.v:11" *)
  input validEntrada0;
  (* src = "synth.v:12" *)
  input validEntrada1;
  (* src = "synth.v:13" *)
  input validEntrada2;
  (* src = "synth.v:14" *)
  input validEntrada3;
  (* src = "synth.v:7" *)
  output validsalida;
  (* src = "synth.v:30" *)
  wire validsalida0;
  (* src = "synth.v:30" *)
  wire validsalida1;
  (* module_not_derived = 32'd1 *)
  (* src = "synth.v:57" *)
  synth3 muxitol2 (
    .Entrada0(Salida0),
    .Entrada1(Salida1),
    .Salida_estructural(Salida_estructural),
    .clk_4f(clk_4f),
    .reset(reset),
    .validEntrada0(validsalida0),
    .validEntrada1(validsalida1),
    .validsalida(validsalida0)
  );
  (* module_not_derived = 32'd1 *)
  (* src = "synth.v:32" *)
  synth2 muxl1 (
    .Entrada0(Entrada2),
    .Entrada1(Entrada3),
    .Entrada2(Entrada0),
    .Entrada3(Entrada1),
    .Salida0(Salida0),
    .Salida1(Salida1),
    .clk_2f(clk_2f),
    .reset(reset),
    .validEntrada0(validEntrada0),
    .validEntrada1(validEntrada1),
    .validEntrada2(validEntrada2),
    .validEntrada3(validEntrada3),
    .validsalida0(validsalida0),
    .validsalida1(validsalida1)
  );
endmodule

(* src = "synth1.v:1" *)
module synth1(Salida_estructural, validsalida, Entrada0, Entrada1, validEntrada0, validEntrada1, clk, reset);
  (* src = "synth1.v:12" *)
  wire [7:0] _000_;
  (* src = "synth1.v:12" *)
  wire _001_;
  (* src = "synth1.v:12" *)
  wire _002_;
  (* src = "synth1.v:12" *)
  wire _003_;
  (* src = "synth1.v:12" *)
  wire _004_;
  (* src = "synth1.v:12" *)
  wire _005_;
  (* src = "synth1.v:12" *)
  wire _006_;
  (* src = "synth1.v:12" *)
  wire _007_;
  (* src = "synth1.v:12" *)
  wire _008_;
  (* src = "synth1.v:12" *)
  wire _009_;
  (* src = "synth1.v:12" *)
  wire _010_;
  (* src = "synth1.v:12" *)
  wire _011_;
  (* src = "synth1.v:12" *)
  wire _012_;
  (* src = "synth1.v:4" *)
  wire _013_;
  (* src = "synth1.v:4" *)
  wire _014_;
  (* src = "synth1.v:4" *)
  wire _015_;
  (* src = "synth1.v:4" *)
  wire _016_;
  (* src = "synth1.v:4" *)
  wire _017_;
  (* src = "synth1.v:4" *)
  wire _018_;
  (* src = "synth1.v:4" *)
  wire _019_;
  (* src = "synth1.v:4" *)
  wire _020_;
  (* src = "synth1.v:5" *)
  wire _021_;
  (* src = "synth1.v:5" *)
  wire _022_;
  (* src = "synth1.v:5" *)
  wire _023_;
  (* src = "synth1.v:5" *)
  wire _024_;
  (* src = "synth1.v:5" *)
  wire _025_;
  (* src = "synth1.v:5" *)
  wire _026_;
  (* src = "synth1.v:5" *)
  wire _027_;
  (* src = "synth1.v:5" *)
  wire _028_;
  wire _029_;
  wire _030_;
  wire _031_;
  wire _032_;
  wire _033_;
  wire _034_;
  wire _035_;
  wire _036_;
  wire _037_;
  wire _038_;
  wire _039_;
  wire _040_;
  wire _041_;
  wire _042_;
  wire _043_;
  wire _044_;
  wire _045_;
  wire _046_;
  wire _047_;
  wire _048_;
  wire _049_;
  wire _050_;
  wire _051_;
  wire _052_;
  wire _053_;
  wire _054_;
  wire _055_;
  wire _056_;
  wire _057_;
  wire _058_;
  wire _059_;
  wire _060_;
  wire _061_;
  wire _062_;
  wire _063_;
  wire _064_;
  wire _065_;
  wire _066_;
  wire _067_;
  wire _068_;
  wire _069_;
  wire _070_;
  wire _071_;
  wire _072_;
  wire _073_;
  wire _074_;
  wire _075_;
  (* src = "synth1.v:9" *)
  wire _076_;
  (* src = "synth1.v:11" *)
  wire _077_;
  (* src = "synth1.v:6" *)
  wire _078_;
  (* src = "synth1.v:7" *)
  wire _079_;
  (* src = "synth1.v:2" *)
  wire _080_;
  wire _081_;
  wire [7:0] _082_;
  (* src = "synth1.v:32|mux2x1.v:17|<techmap.v>:432" *)
  wire [15:0] _083_;
  (* src = "synth1.v:32|mux2x1.v:17|<techmap.v>:428" *)
  wire [7:0] _084_;
  wire [7:0] _085_;
  (* src = "synth1.v:32|mux2x1.v:17|<techmap.v>:432" *)
  wire [1:0] _086_;
  (* src = "synth1.v:32|mux2x1.v:17|<techmap.v>:428" *)
  wire _087_;
  (* src = "synth1.v:4" *)
  input [7:0] Entrada0;
  (* src = "synth1.v:5" *)
  input [7:0] Entrada1;
  (* src = "synth1.v:1" *)
  output [7:0] Salida_estructural;
  (* src = "synth1.v:8" *)
  input clk;
  (* src = "synth1.v:9" *)
  input reset;
  (* src = "synth1.v:11" *)
  wire selector;
  (* src = "synth1.v:6" *)
  input validEntrada0;
  (* src = "synth1.v:7" *)
  input validEntrada1;
  (* src = "synth1.v:2" *)
  output validsalida;
  NOT _088_ (
    .A(_023_),
    .Y(_029_)
  );
  NOT _089_ (
    .A(_024_),
    .Y(_030_)
  );
  NOT _090_ (
    .A(_025_),
    .Y(_031_)
  );
  NOT _091_ (
    .A(_026_),
    .Y(_032_)
  );
  NOT _092_ (
    .A(_027_),
    .Y(_033_)
  );
  NOT _093_ (
    .A(_028_),
    .Y(_034_)
  );
  NOT _094_ (
    .A(_076_),
    .Y(_035_)
  );
  NOT _095_ (
    .A(_013_),
    .Y(_036_)
  );
  NOT _096_ (
    .A(_014_),
    .Y(_037_)
  );
  NOT _097_ (
    .A(_015_),
    .Y(_038_)
  );
  NOT _098_ (
    .A(_016_),
    .Y(_039_)
  );
  NOT _099_ (
    .A(_017_),
    .Y(_040_)
  );
  NOT _100_ (
    .A(_018_),
    .Y(_041_)
  );
  NOT _101_ (
    .A(_019_),
    .Y(_042_)
  );
  NOT _102_ (
    .A(_020_),
    .Y(_043_)
  );
  NOT _103_ (
    .A(_021_),
    .Y(_044_)
  );
  NOT _104_ (
    .A(_022_),
    .Y(_045_)
  );
  NOT _105_ (
    .A(_077_),
    .Y(_046_)
  );
  NAND _106_ (
    .A(_079_),
    .B(_077_),
    .Y(_047_)
  );
  NOR _107_ (
    .A(_044_),
    .B(_047_),
    .Y(_048_)
  );
  NAND _108_ (
    .A(_078_),
    .B(_046_),
    .Y(_049_)
  );
  NOR _109_ (
    .A(_036_),
    .B(_049_),
    .Y(_050_)
  );
  NOR _110_ (
    .A(_048_),
    .B(_050_),
    .Y(_051_)
  );
  NOR _111_ (
    .A(_035_),
    .B(_051_),
    .Y(_003_)
  );
  NOR _112_ (
    .A(_045_),
    .B(_047_),
    .Y(_052_)
  );
  NOR _113_ (
    .A(_037_),
    .B(_049_),
    .Y(_053_)
  );
  NOR _114_ (
    .A(_052_),
    .B(_053_),
    .Y(_054_)
  );
  NOR _115_ (
    .A(_035_),
    .B(_054_),
    .Y(_004_)
  );
  NOR _116_ (
    .A(_029_),
    .B(_047_),
    .Y(_055_)
  );
  NOR _117_ (
    .A(_038_),
    .B(_049_),
    .Y(_056_)
  );
  NOR _118_ (
    .A(_055_),
    .B(_056_),
    .Y(_057_)
  );
  NOR _119_ (
    .A(_035_),
    .B(_057_),
    .Y(_005_)
  );
  NOR _120_ (
    .A(_030_),
    .B(_047_),
    .Y(_058_)
  );
  NOR _121_ (
    .A(_039_),
    .B(_049_),
    .Y(_059_)
  );
  NOR _122_ (
    .A(_058_),
    .B(_059_),
    .Y(_060_)
  );
  NOR _123_ (
    .A(_035_),
    .B(_060_),
    .Y(_006_)
  );
  NOR _124_ (
    .A(_031_),
    .B(_047_),
    .Y(_061_)
  );
  NOR _125_ (
    .A(_040_),
    .B(_049_),
    .Y(_062_)
  );
  NOR _126_ (
    .A(_061_),
    .B(_062_),
    .Y(_063_)
  );
  NOR _127_ (
    .A(_035_),
    .B(_063_),
    .Y(_007_)
  );
  NOR _128_ (
    .A(_032_),
    .B(_047_),
    .Y(_064_)
  );
  NOR _129_ (
    .A(_041_),
    .B(_049_),
    .Y(_065_)
  );
  NOR _130_ (
    .A(_064_),
    .B(_065_),
    .Y(_066_)
  );
  NOR _131_ (
    .A(_035_),
    .B(_066_),
    .Y(_008_)
  );
  NOR _132_ (
    .A(_033_),
    .B(_047_),
    .Y(_067_)
  );
  NOR _133_ (
    .A(_042_),
    .B(_049_),
    .Y(_068_)
  );
  NOR _134_ (
    .A(_067_),
    .B(_068_),
    .Y(_069_)
  );
  NOR _135_ (
    .A(_035_),
    .B(_069_),
    .Y(_009_)
  );
  NOR _136_ (
    .A(_034_),
    .B(_047_),
    .Y(_070_)
  );
  NOR _137_ (
    .A(_043_),
    .B(_049_),
    .Y(_071_)
  );
  NOR _138_ (
    .A(_070_),
    .B(_071_),
    .Y(_072_)
  );
  NOR _139_ (
    .A(_035_),
    .B(_072_),
    .Y(_010_)
  );
  NOR _140_ (
    .A(_035_),
    .B(_077_),
    .Y(_011_)
  );
  NAND _141_ (
    .A(_047_),
    .B(_049_),
    .Y(_073_)
  );
  NAND _142_ (
    .A(_076_),
    .B(_073_),
    .Y(_074_)
  );
  NAND _143_ (
    .A(_035_),
    .B(_080_),
    .Y(_075_)
  );
  NAND _144_ (
    .A(_074_),
    .B(_075_),
    .Y(_012_)
  );
  (* src = "synth1.v:12" *)
  DFF _145_ (
    .C(clk),
    .D(_001_),
    .Q(selector)
  );
  (* src = "synth1.v:12" *)
  DFF _146_ (
    .C(clk),
    .D(_000_[0]),
    .Q(Salida_estructural[0])
  );
  (* src = "synth1.v:12" *)
  DFF _147_ (
    .C(clk),
    .D(_000_[1]),
    .Q(Salida_estructural[1])
  );
  (* src = "synth1.v:12" *)
  DFF _148_ (
    .C(clk),
    .D(_000_[2]),
    .Q(Salida_estructural[2])
  );
  (* src = "synth1.v:12" *)
  DFF _149_ (
    .C(clk),
    .D(_000_[3]),
    .Q(Salida_estructural[3])
  );
  (* src = "synth1.v:12" *)
  DFF _150_ (
    .C(clk),
    .D(_000_[4]),
    .Q(Salida_estructural[4])
  );
  (* src = "synth1.v:12" *)
  DFF _151_ (
    .C(clk),
    .D(_000_[5]),
    .Q(Salida_estructural[5])
  );
  (* src = "synth1.v:12" *)
  DFF _152_ (
    .C(clk),
    .D(_000_[6]),
    .Q(Salida_estructural[6])
  );
  (* src = "synth1.v:12" *)
  DFF _153_ (
    .C(clk),
    .D(_000_[7]),
    .Q(Salida_estructural[7])
  );
  (* src = "synth1.v:12" *)
  DFF _154_ (
    .C(clk),
    .D(_002_),
    .Q(validsalida)
  );
  assign _023_ = Entrada1[2];
  assign _079_ = validEntrada1;
  assign _024_ = Entrada1[3];
  assign _025_ = Entrada1[4];
  assign _026_ = Entrada1[5];
  assign _027_ = Entrada1[6];
  assign _028_ = Entrada1[7];
  assign _076_ = reset;
  assign _000_[0] = _003_;
  assign _000_[1] = _004_;
  assign _000_[2] = _005_;
  assign _000_[3] = _006_;
  assign _000_[4] = _007_;
  assign _000_[5] = _008_;
  assign _000_[6] = _009_;
  assign _000_[7] = _010_;
  assign _001_ = _011_;
  assign _080_ = validsalida;
  assign _002_ = _012_;
  assign _013_ = Entrada0[0];
  assign _078_ = validEntrada0;
  assign _014_ = Entrada0[1];
  assign _015_ = Entrada0[2];
  assign _016_ = Entrada0[3];
  assign _017_ = Entrada0[4];
  assign _018_ = Entrada0[5];
  assign _019_ = Entrada0[6];
  assign _020_ = Entrada0[7];
  assign _021_ = Entrada1[0];
  assign _022_ = Entrada1[1];
  assign _077_ = selector;
endmodule

(* src = "synth2.v:7" *)
module synth2(Salida0, Salida1, validsalida0, validsalida1, Entrada0, Entrada1, Entrada2, Entrada3, validEntrada0, validEntrada1, validEntrada2, validEntrada3, clk_2f, reset);
  (* src = "synth2.v:17" *)
  input [7:0] Entrada0;
  (* src = "synth2.v:18" *)
  input [7:0] Entrada1;
  (* src = "synth2.v:19" *)
  input [7:0] Entrada2;
  (* src = "synth2.v:20" *)
  input [7:0] Entrada3;
  (* src = "synth2.v:10" *)
  output [7:0] Salida0;
  (* src = "synth2.v:11" *)
  output [7:0] Salida1;
  (* src = "synth2.v:29" *)
  input clk_2f;
  (* src = "synth2.v:30" *)
  input reset;
  (* src = "synth2.v:23" *)
  input validEntrada0;
  (* src = "synth2.v:24" *)
  input validEntrada1;
  (* src = "synth2.v:25" *)
  input validEntrada2;
  (* src = "synth2.v:26" *)
  input validEntrada3;
  (* src = "synth2.v:13" *)
  output validsalida0;
  (* src = "synth2.v:14" *)
  output validsalida1;
  (* module_not_derived = 32'd1 *)
  (* src = "synth2.v:32" *)
  synth1 mux1 (
    .Entrada0(Entrada0),
    .Entrada1(Entrada1),
    .Salida_estructural(Salida0),
    .clk(clk_2f),
    .reset(reset),
    .validEntrada0(validEntrada0),
    .validEntrada1(validEntrada1),
    .validsalida(validsalida0)
  );
  (* module_not_derived = 32'd1 *)
  (* src = "synth2.v:45" *)
  synth1 mux2 (
    .Entrada0(Entrada2),
    .Entrada1(Entrada3),
    .Salida_estructural(Salida1),
    .clk(clk_2f),
    .reset(reset),
    .validEntrada0(validEntrada2),
    .validEntrada1(validEntrada3),
    .validsalida(validsalida1)
  );
endmodule

(* src = "synth3.v:4" *)
module synth3(Salida_estructural, validsalida, Entrada0, Entrada1, validEntrada0, validEntrada1, clk_4f, reset);
  (* src = "synth3.v:12" *)
  input [7:0] Entrada0;
  (* src = "synth3.v:13" *)
  input [7:0] Entrada1;
  (* src = "synth3.v:6" *)
  output [7:0] Salida_estructural;
  (* src = "synth3.v:20" *)
  input clk_4f;
  (* src = "synth3.v:21" *)
  input reset;
  (* src = "synth3.v:16" *)
  input validEntrada0;
  (* src = "synth3.v:17" *)
  input validEntrada1;
  (* src = "synth3.v:8" *)
  output validsalida;
  (* module_not_derived = 32'd1 *)
  (* src = "synth3.v:23" *)
  synth1 mux1 (
    .Entrada0(Entrada0),
    .Entrada1(Entrada1),
    .Salida_estructural(Salida_estructural),
    .clk(clk_4f),
    .reset(reset),
    .validEntrada0(validEntrada0),
    .validEntrada1(validEntrada1),
    .validsalida(validsalida)
  );
endmodule
