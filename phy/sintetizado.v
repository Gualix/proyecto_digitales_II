/* Generated by Yosys 0.7 (git sha1 61f6811, gcc 4.8.4-2ubuntu1~14.04.3 -O2 -fstack-protector -fPIC -Os) */

(* src = "Muxessintetizadosintetizadosintetizadosintetizadosintetizado.v:3" *)
module Muxessintetizadosintetizadosintetizadosintetizadosintetizado(Salida_conductual, validsalida, validEntrada0, validEntrada1, validEntrada2, validEntrada3, Entrada0, Entrada1, Entrada2, Entrada3, clk_4f, clk_2f, clk_f, reset);
  (* src = "Muxessintetizadosintetizadosintetizadosintetizadosintetizado.v:17" *)
  input [7:0] Entrada0;
  (* src = "Muxessintetizadosintetizadosintetizadosintetizadosintetizado.v:18" *)
  input [7:0] Entrada1;
  (* src = "Muxessintetizadosintetizadosintetizadosintetizadosintetizado.v:19" *)
  input [7:0] Entrada2;
  (* src = "Muxessintetizadosintetizadosintetizadosintetizadosintetizado.v:20" *)
  input [7:0] Entrada3;
  (* src = "Muxessintetizadosintetizadosintetizadosintetizadosintetizado.v:29" *)
  wire [7:0] Salida0;
  (* src = "Muxessintetizadosintetizadosintetizadosintetizadosintetizado.v:29" *)
  wire [7:0] Salida1;
  (* src = "Muxessintetizadosintetizadosintetizadosintetizadosintetizado.v:5" *)
  output [7:0] Salida_conductual;
  (* src = "Muxessintetizadosintetizadosintetizadosintetizadosintetizado.v:24" *)
  input clk_2f;
  (* src = "Muxessintetizadosintetizadosintetizadosintetizadosintetizado.v:23" *)
  input clk_4f;
  (* src = "Muxessintetizadosintetizadosintetizadosintetizadosintetizado.v:25" *)
  input clk_f;
  (* src = "Muxessintetizadosintetizadosintetizadosintetizadosintetizado.v:26" *)
  input reset;
  (* src = "Muxessintetizadosintetizadosintetizadosintetizadosintetizado.v:11" *)
  input validEntrada0;
  (* src = "Muxessintetizadosintetizadosintetizadosintetizadosintetizado.v:12" *)
  input validEntrada1;
  (* src = "Muxessintetizadosintetizadosintetizadosintetizadosintetizado.v:13" *)
  input validEntrada2;
  (* src = "Muxessintetizadosintetizadosintetizadosintetizadosintetizado.v:14" *)
  input validEntrada3;
  (* src = "Muxessintetizadosintetizadosintetizadosintetizadosintetizado.v:7" *)
  output validsalida;
  (* src = "Muxessintetizadosintetizadosintetizadosintetizadosintetizado.v:30" *)
  wire validsalida0;
  (* src = "Muxessintetizadosintetizadosintetizadosintetizadosintetizado.v:30" *)
  wire validsalida1;
  (* src = "Muxessintetizadosintetizadosintetizadosintetizadosintetizado.v:57" *)
  muxL2sintetizadosintetizadosintetizadosintetizadosintetizado muxitol2 (
    .Entrada0(Salida0),
    .Entrada1(Salida1),
    .Salida_conductual(Salida_conductual),
    .clk_4f(clk_4f),
    .reset(reset),
    .validEntrada0(validsalida0),
    .validEntrada1(validsalida1),
    .validsalida(validsalida)
  );
  (* src = "Muxessintetizadosintetizadosintetizadosintetizadosintetizado.v:32" *)
  muxL1sintetizadosintetizadosintetizadosintetizadosintetizado muxl1 (
    .Entrada0(Entrada0),
    .Entrada1(Entrada1),
    .Entrada2(Entrada2),
    .Entrada3(Entrada3),
    .Salida0(Salida0),
    .Salida1(Salida1),
    .clk_2f(clk_2f),
    .reset(reset),
    .validEntrada0(validEntrada0),
    .validEntrada1(validEntrada1),
    .validEntrada2(validEntrada2),
    .validEntrada3(validEntrada3),
    .validsalida0(validsalida0),
    .validsalida1(validsalida1)
  );
endmodule

(* src = "mux2x1sintetizadosintetizadosintetizadosintetizadosintetizado.v:1" *)
module mux2x1sintetizadosintetizadosintetizadosintetizadosintetizado(Salida_conductual, validsalida, Entrada0, Entrada1, validEntrada0, validEntrada1, clk, reset);
  (* src = "mux2x1sintetizadosintetizadosintetizadosintetizadosintetizado.v:12" *)
  wire [7:0] _000_;
  (* src = "mux2x1sintetizadosintetizadosintetizadosintetizadosintetizado.v:12" *)
  wire _001_;
  (* src = "mux2x1sintetizadosintetizadosintetizadosintetizadosintetizado.v:12" *)
  wire _002_;
  wire _003_;
  wire _004_;
  wire _005_;
  wire _006_;
  wire _007_;
  wire _008_;
  wire _009_;
  wire _010_;
  wire _011_;
  wire _012_;
  wire _013_;
  wire _014_;
  wire _015_;
  wire _016_;
  wire _017_;
  wire _018_;
  wire _019_;
  wire _020_;
  wire _021_;
  wire _022_;
  wire _023_;
  wire _024_;
  wire _025_;
  wire _026_;
  wire _027_;
  wire _028_;
  wire _029_;
  wire _030_;
  wire _031_;
  wire _032_;
  wire _033_;
  wire _034_;
  wire _035_;
  wire _036_;
  wire _037_;
  wire _038_;
  wire _039_;
  wire _040_;
  wire _041_;
  wire _042_;
  wire _043_;
  wire _044_;
  wire _045_;
  wire _046_;
  wire _047_;
  wire _048_;
  wire _049_;
  (* src = "mux2x1sintetizadosintetizadosintetizadosintetizadosintetizado.v:4" *)
  input [7:0] Entrada0;
  (* src = "mux2x1sintetizadosintetizadosintetizadosintetizadosintetizado.v:5" *)
  input [7:0] Entrada1;
  (* src = "mux2x1sintetizadosintetizadosintetizadosintetizadosintetizado.v:1" *)
  output [7:0] Salida_conductual;
  (* src = "mux2x1sintetizadosintetizadosintetizadosintetizadosintetizado.v:8" *)
  input clk;
  (* src = "mux2x1sintetizadosintetizadosintetizadosintetizadosintetizado.v:9" *)
  input reset;
  (* src = "mux2x1sintetizadosintetizadosintetizadosintetizadosintetizado.v:11" *)
  wire selector;
  (* src = "mux2x1sintetizadosintetizadosintetizadosintetizadosintetizado.v:6" *)
  input validEntrada0;
  (* src = "mux2x1sintetizadosintetizadosintetizadosintetizadosintetizado.v:7" *)
  input validEntrada1;
  (* src = "mux2x1sintetizadosintetizadosintetizadosintetizadosintetizado.v:2" *)
  output validsalida;
  NOT _050_ (
    .A(reset),
    .Y(_003_)
  );
  NOR _051_ (
    .A(_003_),
    .B(selector),
    .Y(_001_)
  );
  NAND _052_ (
    .A(validEntrada1),
    .B(selector),
    .Y(_004_)
  );
  NOT _053_ (
    .A(selector),
    .Y(_005_)
  );
  NAND _054_ (
    .A(validEntrada0),
    .B(_005_),
    .Y(_006_)
  );
  NAND _055_ (
    .A(_006_),
    .B(_004_),
    .Y(_007_)
  );
  NAND _056_ (
    .A(_007_),
    .B(reset),
    .Y(_008_)
  );
  NAND _057_ (
    .A(validsalida),
    .B(_003_),
    .Y(_009_)
  );
  NAND _058_ (
    .A(_009_),
    .B(_008_),
    .Y(_002_)
  );
  NOT _059_ (
    .A(Entrada1[0]),
    .Y(_010_)
  );
  NOR _060_ (
    .A(_004_),
    .B(_010_),
    .Y(_011_)
  );
  NOT _061_ (
    .A(Entrada0[0]),
    .Y(_012_)
  );
  NOR _062_ (
    .A(_006_),
    .B(_012_),
    .Y(_013_)
  );
  NOR _063_ (
    .A(_013_),
    .B(_011_),
    .Y(_014_)
  );
  NOR _064_ (
    .A(_014_),
    .B(_003_),
    .Y(_000_[0])
  );
  NOT _065_ (
    .A(Entrada1[1]),
    .Y(_015_)
  );
  NOR _066_ (
    .A(_004_),
    .B(_015_),
    .Y(_016_)
  );
  NOT _067_ (
    .A(Entrada0[1]),
    .Y(_017_)
  );
  NOR _068_ (
    .A(_006_),
    .B(_017_),
    .Y(_018_)
  );
  NOR _069_ (
    .A(_018_),
    .B(_016_),
    .Y(_019_)
  );
  NOR _070_ (
    .A(_019_),
    .B(_003_),
    .Y(_000_[1])
  );
  NOT _071_ (
    .A(Entrada1[2]),
    .Y(_020_)
  );
  NOR _072_ (
    .A(_004_),
    .B(_020_),
    .Y(_021_)
  );
  NOT _073_ (
    .A(Entrada0[2]),
    .Y(_022_)
  );
  NOR _074_ (
    .A(_006_),
    .B(_022_),
    .Y(_023_)
  );
  NOR _075_ (
    .A(_023_),
    .B(_021_),
    .Y(_024_)
  );
  NOR _076_ (
    .A(_024_),
    .B(_003_),
    .Y(_000_[2])
  );
  NOT _077_ (
    .A(Entrada1[3]),
    .Y(_025_)
  );
  NOR _078_ (
    .A(_004_),
    .B(_025_),
    .Y(_026_)
  );
  NOT _079_ (
    .A(Entrada0[3]),
    .Y(_027_)
  );
  NOR _080_ (
    .A(_006_),
    .B(_027_),
    .Y(_028_)
  );
  NOR _081_ (
    .A(_028_),
    .B(_026_),
    .Y(_029_)
  );
  NOR _082_ (
    .A(_029_),
    .B(_003_),
    .Y(_000_[3])
  );
  NOT _083_ (
    .A(Entrada1[4]),
    .Y(_030_)
  );
  NOR _084_ (
    .A(_004_),
    .B(_030_),
    .Y(_031_)
  );
  NOT _085_ (
    .A(Entrada0[4]),
    .Y(_032_)
  );
  NOR _086_ (
    .A(_006_),
    .B(_032_),
    .Y(_033_)
  );
  NOR _087_ (
    .A(_033_),
    .B(_031_),
    .Y(_034_)
  );
  NOR _088_ (
    .A(_034_),
    .B(_003_),
    .Y(_000_[4])
  );
  NOT _089_ (
    .A(Entrada1[5]),
    .Y(_035_)
  );
  NOR _090_ (
    .A(_004_),
    .B(_035_),
    .Y(_036_)
  );
  NOT _091_ (
    .A(Entrada0[5]),
    .Y(_037_)
  );
  NOR _092_ (
    .A(_006_),
    .B(_037_),
    .Y(_038_)
  );
  NOR _093_ (
    .A(_038_),
    .B(_036_),
    .Y(_039_)
  );
  NOR _094_ (
    .A(_039_),
    .B(_003_),
    .Y(_000_[5])
  );
  NOT _095_ (
    .A(Entrada1[6]),
    .Y(_040_)
  );
  NOR _096_ (
    .A(_004_),
    .B(_040_),
    .Y(_041_)
  );
  NOT _097_ (
    .A(Entrada0[6]),
    .Y(_042_)
  );
  NOR _098_ (
    .A(_006_),
    .B(_042_),
    .Y(_043_)
  );
  NOR _099_ (
    .A(_043_),
    .B(_041_),
    .Y(_044_)
  );
  NOR _100_ (
    .A(_044_),
    .B(_003_),
    .Y(_000_[6])
  );
  NOT _101_ (
    .A(Entrada1[7]),
    .Y(_045_)
  );
  NOR _102_ (
    .A(_004_),
    .B(_045_),
    .Y(_046_)
  );
  NOT _103_ (
    .A(Entrada0[7]),
    .Y(_047_)
  );
  NOR _104_ (
    .A(_006_),
    .B(_047_),
    .Y(_048_)
  );
  NOR _105_ (
    .A(_048_),
    .B(_046_),
    .Y(_049_)
  );
  NOR _106_ (
    .A(_049_),
    .B(_003_),
    .Y(_000_[7])
  );
  DFF _107_ (
    .C(clk),
    .D(_000_[0]),
    .Q(Salida_conductual[0])
  );
  DFF _108_ (
    .C(clk),
    .D(_000_[1]),
    .Q(Salida_conductual[1])
  );
  DFF _109_ (
    .C(clk),
    .D(_000_[2]),
    .Q(Salida_conductual[2])
  );
  DFF _110_ (
    .C(clk),
    .D(_000_[3]),
    .Q(Salida_conductual[3])
  );
  DFF _111_ (
    .C(clk),
    .D(_000_[4]),
    .Q(Salida_conductual[4])
  );
  DFF _112_ (
    .C(clk),
    .D(_000_[5]),
    .Q(Salida_conductual[5])
  );
  DFF _113_ (
    .C(clk),
    .D(_000_[6]),
    .Q(Salida_conductual[6])
  );
  DFF _114_ (
    .C(clk),
    .D(_000_[7]),
    .Q(Salida_conductual[7])
  );
  DFF _115_ (
    .C(clk),
    .D(_002_),
    .Q(validsalida)
  );
  DFF _116_ (
    .C(clk),
    .D(_001_),
    .Q(selector)
  );
endmodule

(* src = "./muxL1sintetizadosintetizadosintetizadosintetizadosintetizado.v:7" *)
module muxL1sintetizadosintetizadosintetizadosintetizadosintetizado(Salida0, Salida1, validsalida0, validsalida1, Entrada0, Entrada1, Entrada2, Entrada3, validEntrada0, validEntrada1, validEntrada2, validEntrada3, clk_2f, reset);
  (* src = "./muxL1sintetizadosintetizadosintetizadosintetizadosintetizado.v:17" *)
  input [7:0] Entrada0;
  (* src = "./muxL1sintetizadosintetizadosintetizadosintetizadosintetizado.v:18" *)
  input [7:0] Entrada1;
  (* src = "./muxL1sintetizadosintetizadosintetizadosintetizadosintetizado.v:19" *)
  input [7:0] Entrada2;
  (* src = "./muxL1sintetizadosintetizadosintetizadosintetizadosintetizado.v:20" *)
  input [7:0] Entrada3;
  (* src = "./muxL1sintetizadosintetizadosintetizadosintetizadosintetizado.v:10" *)
  output [7:0] Salida0;
  (* src = "./muxL1sintetizadosintetizadosintetizadosintetizadosintetizado.v:11" *)
  output [7:0] Salida1;
  (* src = "./muxL1sintetizadosintetizadosintetizadosintetizadosintetizado.v:29" *)
  input clk_2f;
  (* src = "./muxL1sintetizadosintetizadosintetizadosintetizadosintetizado.v:30" *)
  input reset;
  (* src = "./muxL1sintetizadosintetizadosintetizadosintetizadosintetizado.v:23" *)
  input validEntrada0;
  (* src = "./muxL1sintetizadosintetizadosintetizadosintetizadosintetizado.v:24" *)
  input validEntrada1;
  (* src = "./muxL1sintetizadosintetizadosintetizadosintetizadosintetizado.v:25" *)
  input validEntrada2;
  (* src = "./muxL1sintetizadosintetizadosintetizadosintetizadosintetizado.v:26" *)
  input validEntrada3;
  (* src = "./muxL1sintetizadosintetizadosintetizadosintetizadosintetizado.v:13" *)
  output validsalida0;
  (* src = "./muxL1sintetizadosintetizadosintetizadosintetizadosintetizado.v:14" *)
  output validsalida1;
  (* src = "./muxL1sintetizadosintetizadosintetizadosintetizadosintetizado.v:32" *)
  mux2x1sintetizadosintetizadosintetizadosintetizadosintetizado mux1 (
    .Entrada0(Entrada0),
    .Entrada1(Entrada1),
    .Salida_conductual(Salida0),
    .clk(clk_2f),
    .reset(reset),
    .validEntrada0(validEntrada0),
    .validEntrada1(validEntrada1),
    .validsalida(validsalida0)
  );
  (* src = "./muxL1sintetizadosintetizadosintetizadosintetizadosintetizado.v:45" *)
  mux2x1sintetizadosintetizadosintetizadosintetizadosintetizado mux2 (
    .Entrada0(Entrada2),
    .Entrada1(Entrada3),
    .Salida_conductual(Salida1),
    .clk(clk_2f),
    .reset(reset),
    .validEntrada0(validEntrada2),
    .validEntrada1(validEntrada3),
    .validsalida(validsalida1)
  );
endmodule

(* src = "./muxL2sintetizadosintetizadosintetizadosintetizadosintetizado.v:4" *)
module muxL2sintetizadosintetizadosintetizadosintetizadosintetizado(Salida_conductual, validsalida, Entrada0, Entrada1, validEntrada0, validEntrada1, clk_4f, reset);
  (* src = "./muxL2sintetizadosintetizadosintetizadosintetizadosintetizado.v:12" *)
  input [7:0] Entrada0;
  (* src = "./muxL2sintetizadosintetizadosintetizadosintetizadosintetizado.v:13" *)
  input [7:0] Entrada1;
  (* src = "./muxL2sintetizadosintetizadosintetizadosintetizadosintetizado.v:6" *)
  output [7:0] Salida_conductual;
  (* src = "./muxL2sintetizadosintetizadosintetizadosintetizadosintetizado.v:20" *)
  input clk_4f;
  (* src = "./muxL2sintetizadosintetizadosintetizadosintetizadosintetizado.v:21" *)
  input reset;
  (* src = "./muxL2sintetizadosintetizadosintetizadosintetizadosintetizado.v:16" *)
  input validEntrada0;
  (* src = "./muxL2sintetizadosintetizadosintetizadosintetizadosintetizado.v:17" *)
  input validEntrada1;
  (* src = "./muxL2sintetizadosintetizadosintetizadosintetizadosintetizado.v:8" *)
  output validsalida;
  (* src = "./muxL2sintetizadosintetizadosintetizadosintetizadosintetizado.v:23" *)
  mux2x1sintetizadosintetizadosintetizadosintetizadosintetizado mux1 (
    .Entrada0(Entrada0),
    .Entrada1(Entrada1),
    .Salida_conductual(Salida_conductual),
    .clk(clk_4f),
    .reset(reset),
    .validEntrada0(validEntrada0),
    .validEntrada1(validEntrada1),
    .validsalida(validsalida)
  );
endmodule

(* src = "paralelo_serialsintetizadosintetizadosintetizadosintetizadosintetizado.v:4" *)
module paralelo_serialsintetizadosintetizadosintetizadosintetizadosintetizado(reset, clk_4f, clk_32f, valid_in, in_serial, out_serial_conductual);
  (* src = "paralelo_serialsintetizadosintetizadosintetizadosintetizadosintetizado.v:15" *)
  wire _000_;
  (* src = "paralelo_serialsintetizadosintetizadosintetizadosintetizadosintetizado.v:15" *)
  wire [2:0] _001_;
  (* src = "paralelo_serialsintetizadosintetizadosintetizadosintetizadosintetizado.v:15" *)
  wire [2:0] _002_;
  wire _003_;
  wire _004_;
  wire _005_;
  wire _006_;
  wire _007_;
  wire _008_;
  wire _009_;
  wire _010_;
  wire _011_;
  wire _012_;
  wire _013_;
  wire _014_;
  wire _015_;
  wire _016_;
  wire _017_;
  wire _018_;
  wire _019_;
  wire _020_;
  wire _021_;
  wire _022_;
  wire _023_;
  wire _024_;
  wire _025_;
  wire _026_;
  wire _027_;
  wire _028_;
  wire _029_;
  wire _030_;
  wire _031_;
  wire _032_;
  wire _033_;
  wire _034_;
  wire _035_;
  wire _036_;
  wire _037_;
  wire _038_;
  wire _039_;
  wire _040_;
  wire _041_;
  wire _042_;
  wire _043_;
  wire _044_;
  wire _045_;
  wire _046_;
  wire _047_;
  wire _048_;
  wire _049_;
  wire _050_;
  wire _051_;
  wire _052_;
  wire _053_;
  wire _054_;
  wire _055_;
  wire _056_;
  (* src = "paralelo_serialsintetizadosintetizadosintetizadosintetizadosintetizado.v:7" *)
  input clk_32f;
  (* src = "paralelo_serialsintetizadosintetizadosintetizadosintetizadosintetizado.v:6" *)
  input clk_4f;
  (* src = "paralelo_serialsintetizadosintetizadosintetizadosintetizadosintetizado.v:9" *)
  input [7:0] in_serial;
  (* src = "paralelo_serialsintetizadosintetizadosintetizadosintetizadosintetizado.v:10" *)
  output out_serial_conductual;
  (* src = "paralelo_serialsintetizadosintetizadosintetizadosintetizadosintetizado.v:5" *)
  input reset;
  (* src = "paralelo_serialsintetizadosintetizadosintetizadosintetizadosintetizado.v:12" *)
  wire [2:0] selector;
  (* src = "paralelo_serialsintetizadosintetizadosintetizadosintetizadosintetizado.v:13" *)
  wire [2:0] selector_2;
  (* src = "paralelo_serialsintetizadosintetizadosintetizadosintetizadosintetizado.v:8" *)
  input valid_in;
  NOT _057_ (
    .A(valid_in),
    .Y(_003_)
  );
  NAND _058_ (
    .A(reset),
    .B(_003_),
    .Y(_004_)
  );
  NOR _059_ (
    .A(_004_),
    .B(selector[0]),
    .Y(_001_[0])
  );
  NAND _060_ (
    .A(selector[1]),
    .B(selector[0]),
    .Y(_005_)
  );
  NOT _061_ (
    .A(_005_),
    .Y(_006_)
  );
  NOT _062_ (
    .A(_004_),
    .Y(_007_)
  );
  NOT _063_ (
    .A(selector[0]),
    .Y(_008_)
  );
  NOT _064_ (
    .A(selector[1]),
    .Y(_009_)
  );
  NAND _065_ (
    .A(_009_),
    .B(_008_),
    .Y(_010_)
  );
  NAND _066_ (
    .A(_010_),
    .B(_007_),
    .Y(_011_)
  );
  NOR _067_ (
    .A(_011_),
    .B(_006_),
    .Y(_001_[1])
  );
  NOR _068_ (
    .A(_006_),
    .B(selector[2]),
    .Y(_012_)
  );
  NOT _069_ (
    .A(selector[2]),
    .Y(_013_)
  );
  NOR _070_ (
    .A(_009_),
    .B(_013_),
    .Y(_014_)
  );
  NOR _071_ (
    .A(_014_),
    .B(_004_),
    .Y(_015_)
  );
  NOR _072_ (
    .A(_015_),
    .B(_001_[0]),
    .Y(_016_)
  );
  NOR _073_ (
    .A(_016_),
    .B(_012_),
    .Y(_001_[2])
  );
  NOR _074_ (
    .A(selector[1]),
    .B(selector[2]),
    .Y(_017_)
  );
  NAND _075_ (
    .A(_017_),
    .B(selector[0]),
    .Y(_018_)
  );
  NAND _076_ (
    .A(_018_),
    .B(_015_),
    .Y(_019_)
  );
  NOT _077_ (
    .A(in_serial[5]),
    .Y(_020_)
  );
  NOT _078_ (
    .A(selector_2[1]),
    .Y(_021_)
  );
  NOR _079_ (
    .A(_021_),
    .B(selector_2[0]),
    .Y(_022_)
  );
  NOT _080_ (
    .A(_022_),
    .Y(_023_)
  );
  NOR _081_ (
    .A(_023_),
    .B(_020_),
    .Y(_024_)
  );
  NOT _082_ (
    .A(in_serial[4]),
    .Y(_025_)
  );
  NAND _083_ (
    .A(selector_2[1]),
    .B(selector_2[0]),
    .Y(_026_)
  );
  NOR _084_ (
    .A(_026_),
    .B(_025_),
    .Y(_027_)
  );
  NOR _085_ (
    .A(_027_),
    .B(_024_),
    .Y(_028_)
  );
  NOT _086_ (
    .A(in_serial[7]),
    .Y(_029_)
  );
  NOT _087_ (
    .A(selector_2[0]),
    .Y(_030_)
  );
  NAND _088_ (
    .A(_021_),
    .B(_030_),
    .Y(_031_)
  );
  NOR _089_ (
    .A(_031_),
    .B(_029_),
    .Y(_032_)
  );
  NOT _090_ (
    .A(selector_2[2]),
    .Y(_033_)
  );
  NOR _091_ (
    .A(selector_2[1]),
    .B(_030_),
    .Y(_034_)
  );
  NAND _092_ (
    .A(_034_),
    .B(in_serial[6]),
    .Y(_035_)
  );
  NAND _093_ (
    .A(_035_),
    .B(_033_),
    .Y(_036_)
  );
  NOR _094_ (
    .A(_036_),
    .B(_032_),
    .Y(_037_)
  );
  NAND _095_ (
    .A(_037_),
    .B(_028_),
    .Y(_038_)
  );
  NAND _096_ (
    .A(_034_),
    .B(in_serial[2]),
    .Y(_039_)
  );
  NAND _097_ (
    .A(_039_),
    .B(selector_2[2]),
    .Y(_040_)
  );
  NAND _098_ (
    .A(_022_),
    .B(in_serial[1]),
    .Y(_041_)
  );
  NOT _099_ (
    .A(in_serial[3]),
    .Y(_042_)
  );
  NOR _100_ (
    .A(_031_),
    .B(_042_),
    .Y(_043_)
  );
  NOT _101_ (
    .A(in_serial[0]),
    .Y(_044_)
  );
  NOR _102_ (
    .A(_026_),
    .B(_044_),
    .Y(_045_)
  );
  NOR _103_ (
    .A(_045_),
    .B(_043_),
    .Y(_046_)
  );
  NAND _104_ (
    .A(_046_),
    .B(_041_),
    .Y(_047_)
  );
  NOR _105_ (
    .A(_047_),
    .B(_040_),
    .Y(_048_)
  );
  NAND _106_ (
    .A(reset),
    .B(valid_in),
    .Y(_049_)
  );
  NOR _107_ (
    .A(_049_),
    .B(_048_),
    .Y(_050_)
  );
  NAND _108_ (
    .A(_050_),
    .B(_038_),
    .Y(_051_)
  );
  NAND _109_ (
    .A(_051_),
    .B(_019_),
    .Y(_000_)
  );
  NOR _110_ (
    .A(_049_),
    .B(selector_2[0]),
    .Y(_002_[0])
  );
  NAND _111_ (
    .A(_026_),
    .B(_031_),
    .Y(_052_)
  );
  NOR _112_ (
    .A(_052_),
    .B(_049_),
    .Y(_002_[1])
  );
  NOR _113_ (
    .A(_026_),
    .B(_033_),
    .Y(_053_)
  );
  NOT _114_ (
    .A(_049_),
    .Y(_054_)
  );
  NAND _115_ (
    .A(_026_),
    .B(_033_),
    .Y(_055_)
  );
  NAND _116_ (
    .A(_055_),
    .B(_054_),
    .Y(_056_)
  );
  NOR _117_ (
    .A(_056_),
    .B(_053_),
    .Y(_002_[2])
  );
  DFF _118_ (
    .C(clk_32f),
    .D(_001_[0]),
    .Q(selector[0])
  );
  DFF _119_ (
    .C(clk_32f),
    .D(_001_[1]),
    .Q(selector[1])
  );
  DFF _120_ (
    .C(clk_32f),
    .D(_001_[2]),
    .Q(selector[2])
  );
  DFF _121_ (
    .C(clk_32f),
    .D(_000_),
    .Q(out_serial_conductual)
  );
  DFF _122_ (
    .C(clk_32f),
    .D(_002_[0]),
    .Q(selector_2[0])
  );
  DFF _123_ (
    .C(clk_32f),
    .D(_002_[1]),
    .Q(selector_2[1])
  );
  DFF _124_ (
    .C(clk_32f),
    .D(_002_[2]),
    .Q(selector_2[2])
  );
endmodule

(* src = "phy_txsintetizadosintetizadosintetizadosintetizadosintetizado.v:20" *)
module phy_txsintetizadosintetizadosintetizadosintetizadosintetizado(clk_f, clk_2f, clk_4f, clk_32f, reset, data_in0, data_in1, data_in2, data_in3, valid0, valid1, valid2, valid3, in_from_rx, out_to_rx, recirculadorsintetizadosintetizadosintetizadosintetizadosintetizado_desactivado0, recirculador_desactivado1, recirculador_desactivado2, recirculador_desactivado3);
  (* src = "phy_txsintetizadosintetizadosintetizadosintetizadosintetizado.v:53" *)
  wire [7:0] Entrada0;
  (* src = "phy_txsintetizadosintetizadosintetizadosintetizadosintetizado.v:54" *)
  wire [7:0] Entrada1;
  (* src = "phy_txsintetizadosintetizadosintetizadosintetizadosintetizado.v:55" *)
  wire [7:0] Entrada2;
  (* src = "phy_txsintetizadosintetizadosintetizadosintetizadosintetizado.v:56" *)
  wire [7:0] Entrada3;
  (* src = "phy_txsintetizadosintetizadosintetizadosintetizadosintetizado.v:73" *)
  (* unused_bits = "0" *)
  wire IDLEOut;
  (* src = "phy_txsintetizadosintetizadosintetizadosintetizadosintetizado.v:65" *)
  wire [7:0] Salida_conductual;
  (* src = "phy_txsintetizadosintetizadosintetizadosintetizadosintetizado.v:72" *)
  wire active;
  (* src = "phy_txsintetizadosintetizadosintetizadosintetizadosintetizado.v:23" *)
  input clk_2f;
  (* src = "phy_txsintetizadosintetizadosintetizadosintetizadosintetizado.v:25" *)
  input clk_32f;
  (* src = "phy_txsintetizadosintetizadosintetizadosintetizadosintetizado.v:24" *)
  input clk_4f;
  (* src = "phy_txsintetizadosintetizadosintetizadosintetizadosintetizado.v:22" *)
  input clk_f;
  (* src = "phy_txsintetizadosintetizadosintetizadosintetizadosintetizado.v:29" *)
  input [7:0] data_in0;
  (* src = "phy_txsintetizadosintetizadosintetizadosintetizadosintetizado.v:30" *)
  input [7:0] data_in1;
  (* src = "phy_txsintetizadosintetizadosintetizadosintetizadosintetizado.v:31" *)
  input [7:0] data_in2;
  (* src = "phy_txsintetizadosintetizadosintetizadosintetizadosintetizado.v:32" *)
  input [7:0] data_in3;
  (* src = "phy_txsintetizadosintetizadosintetizadosintetizadosintetizado.v:71" *)
  (* unused_bits = "0 1 2 3 4 5 6 7" *)
  wire [7:0] data_serial_paralelosintetizadosintetizadosintetizadosintetizadosintetizadoRX;
  (* src = "phy_txsintetizadosintetizadosintetizadosintetizadosintetizado.v:41" *)
  input in_from_rx;
  (* src = "phy_txsintetizadosintetizadosintetizadosintetizadosintetizado.v:45" *)
  output out_to_rx;
  (* src = "phy_txsintetizadosintetizadosintetizadosintetizadosintetizado.v:47" *)
  output [7:0] recirculadorsintetizadosintetizadosintetizadosintetizadosintetizado_desactivado0;
  (* src = "phy_txsintetizadosintetizadosintetizadosintetizadosintetizado.v:48" *)
  output [7:0] recirculadorsintetizadosintetizadosintetizadosintetizadosintetizado_desactivado1;
  (* src = "phy_txsintetizadosintetizadosintetizadosintetizadosintetizado.v:49" *)
  output [7:0] recirculadorsintetizadosintetizadosintetizadosintetizadosintetizado_desactivado2;
  (* src = "phy_txsintetizadosintetizadosintetizadosintetizadosintetizado.v:50" *)
  output [7:0] recirculadorsintetizadosintetizadosintetizadosintetizadosintetizado_desactivado3;
  (* src = "phy_txsintetizadosintetizadosintetizadosintetizadosintetizado.v:27" *)
  input reset;
  (* src = "phy_txsintetizadosintetizadosintetizadosintetizadosintetizado.v:34" *)
  input valid0;
  (* src = "phy_txsintetizadosintetizadosintetizadosintetizadosintetizado.v:35" *)
  input valid1;
  (* src = "phy_txsintetizadosintetizadosintetizadosintetizadosintetizado.v:36" *)
  input valid2;
  (* src = "phy_txsintetizadosintetizadosintetizadosintetizadosintetizado.v:37" *)
  input valid3;
  (* src = "phy_txsintetizadosintetizadosintetizadosintetizadosintetizado.v:58" *)
  wire valid_out_recirculadorsintetizadosintetizadosintetizadosintetizadosintetizado0;
  (* src = "phy_txsintetizadosintetizadosintetizadosintetizadosintetizado.v:59" *)
  wire valid_out_recirculadorsintetizadosintetizadosintetizadosintetizadosintetizado1;
  (* src = "phy_txsintetizadosintetizadosintetizadosintetizadosintetizado.v:60" *)
  wire valid_out_recirculadorsintetizadosintetizadosintetizadosintetizadosintetizado2;
  (* src = "phy_txsintetizadosintetizadosintetizadosintetizadosintetizado.v:61" *)
  wire valid_out_recirculadorsintetizadosintetizadosintetizadosintetizadosintetizado3;
  (* src = "phy_txsintetizadosintetizadosintetizadosintetizadosintetizado.v:66" *)
  wire validsalida;
  (* src = "phy_txsintetizadosintetizadosintetizadosintetizadosintetizado.v:112" *)
  Muxessintetizadosintetizadosintetizadosintetizadosintetizado muxess (
    .Entrada0(Entrada0),
    .Entrada1(Entrada1),
    .Entrada2(Entrada2),
    .Entrada3(Entrada3),
    .Salida_conductual(Salida_conductual),
    .clk_2f(clk_2f),
    .clk_4f(clk_4f),
    .clk_f(clk_f),
    .reset(reset),
    .validEntrada0(valid_out_recirculadorsintetizadosintetizadosintetizadosintetizadosintetizado0),
    .validEntrada1(valid_out_recirculadorsintetizadosintetizadosintetizadosintetizadosintetizado1),
    .validEntrada2(valid_out_recirculadorsintetizadosintetizadosintetizadosintetizadosintetizado2),
    .validEntrada3(valid_out_recirculadorsintetizadosintetizadosintetizadosintetizadosintetizado3),
    .validsalida(validsalida)
  );
  (* src = "phy_txsintetizadosintetizadosintetizadosintetizadosintetizado.v:136" *)
  paralelo_serialsintetizadosintetizadosintetizadosintetizadosintetizado p2s (
    .clk_32f(clk_32f),
    .clk_4f(clk_4f),
    .in_serial(Salida_conductual),
    .out_serial_conductual(out_to_rx),
    .reset(reset),
    .valid_in(validsalida)
  );
  (* src = "phy_txsintetizadosintetizadosintetizadosintetizadosintetizado.v:75" *)
  recirculadorsintetizadosintetizadosintetizadosintetizadosintetizado recirculadorphy (
    .active(active),
    .clk(clk_f),
    .data_in0(data_in0),
    .data_in1(data_in1),
    .data_in2(data_in2),
    .data_in3(data_in3),
    .recirculadorsintetizadosintetizadosintetizadosintetizadosintetizado_activo0(Entrada0),
    .recirculadorsintetizadosintetizadosintetizadosintetizadosintetizado_activo1(Entrada1),
    .recirculadorsintetizadosintetizadosintetizadosintetizadosintetizado_activo2(Entrada2),
    .recirculadorsintetizadosintetizadosintetizadosintetizadosintetizado_activo3(Entrada3),
    .recirculadorsintetizadosintetizadosintetizadosintetizadosintetizado_desactivado0(recirculador_desactivado0),
    .recirculadorsintetizadosintetizadosintetizadosintetizadosintetizado_desactivado1(recirculador_desactivado1),
    .recirculadorsintetizadosintetizadosintetizadosintetizadosintetizado_desactivado2(recirculador_desactivado2),
    .recirculadorsintetizadosintetizadosintetizadosintetizadosintetizado_desactivado3(recirculador_desactivado3),
    .reset(reset),
    .valid0(valid0),
    .valid1(valid1),
    .valid2(valid2),
    .valid3(valid3),
    .valid_out_recirculadorsintetizadosintetizadosintetizadosintetizadosintetizado0(valid_out_recirculador0),
    .valid_out_recirculadorsintetizadosintetizadosintetizadosintetizadosintetizado1(valid_out_recirculador1),
    .valid_out_recirculadorsintetizadosintetizadosintetizadosintetizadosintetizado2(valid_out_recirculador2),
    .valid_out_recirculadorsintetizadosintetizadosintetizadosintetizadosintetizado3(valid_out_recirculador3)
  );
  (* src = "phy_txsintetizadosintetizadosintetizadosintetizadosintetizado.v:152" *)
  serial_paralelosintetizadosintetizadosintetizadosintetizadosintetizado s2p (
    .IDLEOut(IDLEOut),
    .IDLin(in_from_rx),
    .active_serial_paralelosintetizadosintetizadosintetizadosintetizadosintetizadoTX(active),
    .clk_32f(clk_32f),
    .clk_4f(clk_4f),
    .data_serial_paralelosintetizadosintetizadosintetizadosintetizadosintetizadoTX(data_serial_paraleloRXsintetizado),
    .reset(reset)
  );
endmodule

(* src = "recirculadorsintetizadosintetizadosintetizadosintetizadosintetizado.v:3" *)
module recirculadorsintetizadosintetizadosintetizadosintetizadosintetizado(data_in0, data_in1, data_in2, data_in3, valid0, valid1, valid2, valid3, clk, reset, active, valid_out_recirculador0, valid_out_recirculador1, valid_out_recirculador2, valid_out_recirculador3, recirculador_activo0, recirculador_activo1, recirculador_activo2, recirculador_activo3, recirculador_desactivado0, recirculador_desactivado1, recirculador_desactivado2, recirculador_desactivado3);
  (* src = "recirculadorsintetizadosintetizadosintetizadosintetizadosintetizado.v:43" *)
  wire [7:0] _000_;
  (* src = "recirculadorsintetizadosintetizadosintetizadosintetizadosintetizado.v:43" *)
  wire [7:0] _001_;
  (* src = "recirculadorsintetizadosintetizadosintetizadosintetizadosintetizado.v:43" *)
  wire [7:0] _002_;
  (* src = "recirculadorsintetizadosintetizadosintetizadosintetizadosintetizado.v:43" *)
  wire [7:0] _003_;
  (* src = "recirculadorsintetizadosintetizadosintetizadosintetizadosintetizado.v:43" *)
  wire [7:0] _004_;
  wire _005_;
  wire _006_;
  wire _007_;
  wire _008_;
  wire _009_;
  wire _010_;
  wire _011_;
  wire _012_;
  wire _013_;
  wire _014_;
  wire _015_;
  wire _016_;
  wire _017_;
  wire _018_;
  wire _019_;
  wire _020_;
  wire _021_;
  wire _022_;
  wire _023_;
  wire _024_;
  wire _025_;
  wire _026_;
  wire _027_;
  wire _028_;
  wire _029_;
  wire _030_;
  wire _031_;
  wire _032_;
  wire _033_;
  wire _034_;
  wire _035_;
  wire _036_;
  wire _037_;
  wire _038_;
  wire _039_;
  wire _040_;
  wire _041_;
  wire _042_;
  wire _043_;
  wire _044_;
  wire _045_;
  wire _046_;
  wire _047_;
  wire _048_;
  wire _049_;
  wire _050_;
  wire _051_;
  wire _052_;
  wire _053_;
  wire _054_;
  wire _055_;
  wire _056_;
  wire _057_;
  wire _058_;
  wire _059_;
  wire _060_;
  wire _061_;
  wire _062_;
  wire _063_;
  wire _064_;
  wire _065_;
  wire _066_;
  wire _067_;
  wire _068_;
  wire _069_;
  wire _070_;
  wire _071_;
  wire _072_;
  wire _073_;
  wire _074_;
  wire _075_;
  wire _076_;
  wire _077_;
  wire _078_;
  wire _079_;
  wire _080_;
  wire _081_;
  wire _082_;
  wire _083_;
  wire _084_;
  wire _085_;
  wire _086_;
  wire _087_;
  wire _088_;
  wire _089_;
  wire _090_;
  wire _091_;
  wire _092_;
  wire _093_;
  wire _094_;
  wire _095_;
  wire _096_;
  wire _097_;
  wire _098_;
  wire _099_;
  wire _100_;
  wire _101_;
  wire _102_;
  wire _103_;
  wire _104_;
  wire _105_;
  wire _106_;
  wire _107_;
  wire _108_;
  wire _109_;
  wire _110_;
  wire _111_;
  wire _112_;
  wire _113_;
  wire _114_;
  wire _115_;
  wire _116_;
  wire _117_;
  wire _118_;
  wire _119_;
  wire _120_;
  wire _121_;
  wire _122_;
  wire _123_;
  wire _124_;
  wire _125_;
  wire _126_;
  wire _127_;
  wire _128_;
  wire _129_;
  wire _130_;
  wire _131_;
  wire _132_;
  wire _133_;
  wire _134_;
  wire _135_;
  wire _136_;
  wire _137_;
  wire _138_;
  wire _139_;
  wire _140_;
  wire _141_;
  wire _142_;
  wire _143_;
  wire _144_;
  wire _145_;
  wire _146_;
  wire _147_;
  wire _148_;
  wire _149_;
  wire _150_;
  (* src = "recirculadorsintetizadosintetizadosintetizadosintetizadosintetizado.v:21" *)
  input active;
  (* src = "recirculadorsintetizadosintetizadosintetizadosintetizadosintetizado.v:16" *)
  input clk;
  (* src = "recirculadorsintetizadosintetizadosintetizadosintetizadosintetizado.v:6" *)
  input [7:0] data_in0;
  (* src = "recirculadorsintetizadosintetizadosintetizadosintetizadosintetizado.v:7" *)
  input [7:0] data_in1;
  (* src = "recirculadorsintetizadosintetizadosintetizadosintetizadosintetizado.v:8" *)
  input [7:0] data_in2;
  (* src = "recirculadorsintetizadosintetizadosintetizadosintetizadosintetizado.v:9" *)
  input [7:0] data_in3;
  (* src = "recirculadorsintetizadosintetizadosintetizadosintetizadosintetizado.v:30" *)
  output [7:0] recirculadorsintetizadosintetizadosintetizadosintetizadosintetizado_activo0;
  (* src = "recirculadorsintetizadosintetizadosintetizadosintetizadosintetizado.v:31" *)
  output [7:0] recirculadorsintetizadosintetizadosintetizadosintetizadosintetizado_activo1;
  (* src = "recirculadorsintetizadosintetizadosintetizadosintetizadosintetizado.v:32" *)
  output [7:0] recirculadorsintetizadosintetizadosintetizadosintetizadosintetizado_activo2;
  (* src = "recirculadorsintetizadosintetizadosintetizadosintetizadosintetizado.v:33" *)
  output [7:0] recirculadorsintetizadosintetizadosintetizadosintetizadosintetizado_activo3;
  (* src = "recirculadorsintetizadosintetizadosintetizadosintetizadosintetizado.v:36" *)
  output [7:0] recirculadorsintetizadosintetizadosintetizadosintetizadosintetizado_desactivado0;
  (* src = "recirculadorsintetizadosintetizadosintetizadosintetizadosintetizado.v:37" *)
  output [7:0] recirculadorsintetizadosintetizadosintetizadosintetizadosintetizado_desactivado1;
  (* src = "recirculadorsintetizadosintetizadosintetizadosintetizadosintetizado.v:38" *)
  output [7:0] recirculadorsintetizadosintetizadosintetizadosintetizadosintetizado_desactivado2;
  (* src = "recirculadorsintetizadosintetizadosintetizadosintetizadosintetizado.v:39" *)
  output [7:0] recirculadorsintetizadosintetizadosintetizadosintetizadosintetizado_desactivado3;
  (* src = "recirculadorsintetizadosintetizadosintetizadosintetizadosintetizado.v:18" *)
  input reset;
  (* src = "recirculadorsintetizadosintetizadosintetizadosintetizadosintetizado.v:10" *)
  input valid0;
  (* src = "recirculadorsintetizadosintetizadosintetizadosintetizadosintetizado.v:11" *)
  input valid1;
  (* src = "recirculadorsintetizadosintetizadosintetizadosintetizadosintetizado.v:12" *)
  input valid2;
  (* src = "recirculadorsintetizadosintetizadosintetizadosintetizadosintetizado.v:13" *)
  input valid3;
  (* src = "recirculadorsintetizadosintetizadosintetizadosintetizadosintetizado.v:24" *)
  output valid_out_recirculadorsintetizadosintetizadosintetizadosintetizadosintetizado0;
  (* src = "recirculadorsintetizadosintetizadosintetizadosintetizadosintetizado.v:25" *)
  output valid_out_recirculadorsintetizadosintetizadosintetizadosintetizadosintetizado1;
  (* src = "recirculadorsintetizadosintetizadosintetizadosintetizadosintetizado.v:26" *)
  output valid_out_recirculadorsintetizadosintetizadosintetizadosintetizadosintetizado2;
  (* src = "recirculadorsintetizadosintetizadosintetizadosintetizadosintetizado.v:27" *)
  output valid_out_recirculadorsintetizadosintetizadosintetizadosintetizadosintetizado3;
  NOT _151_ (
    .A(recirculadorsintetizadosintetizadosintetizadosintetizadosintetizado_desactivado0[0]),
    .Y(_005_)
  );
  NAND _152_ (
    .A(reset),
    .B(active),
    .Y(_006_)
  );
  NOR _153_ (
    .A(_006_),
    .B(_005_),
    .Y(_004_[0])
  );
  NOT _154_ (
    .A(recirculadorsintetizadosintetizadosintetizadosintetizadosintetizado_desactivado0[1]),
    .Y(_007_)
  );
  NOR _155_ (
    .A(_006_),
    .B(_007_),
    .Y(_004_[1])
  );
  NOT _156_ (
    .A(recirculadorsintetizadosintetizadosintetizadosintetizadosintetizado_desactivado0[2]),
    .Y(_008_)
  );
  NOR _157_ (
    .A(_006_),
    .B(_008_),
    .Y(_004_[2])
  );
  NOT _158_ (
    .A(recirculadorsintetizadosintetizadosintetizadosintetizadosintetizado_desactivado0[3]),
    .Y(_009_)
  );
  NOR _159_ (
    .A(_006_),
    .B(_009_),
    .Y(_004_[3])
  );
  NOT _160_ (
    .A(recirculadorsintetizadosintetizadosintetizadosintetizadosintetizado_desactivado0[4]),
    .Y(_010_)
  );
  NOR _161_ (
    .A(_006_),
    .B(_010_),
    .Y(_004_[4])
  );
  NOT _162_ (
    .A(recirculadorsintetizadosintetizadosintetizadosintetizadosintetizado_desactivado0[5]),
    .Y(_011_)
  );
  NOR _163_ (
    .A(_006_),
    .B(_011_),
    .Y(_004_[5])
  );
  NOT _164_ (
    .A(recirculadorsintetizadosintetizadosintetizadosintetizadosintetizado_desactivado0[6]),
    .Y(_012_)
  );
  NOR _165_ (
    .A(_006_),
    .B(_012_),
    .Y(_004_[6])
  );
  NOT _166_ (
    .A(recirculadorsintetizadosintetizadosintetizadosintetizadosintetizado_desactivado0[7]),
    .Y(_013_)
  );
  NOR _167_ (
    .A(_006_),
    .B(_013_),
    .Y(_004_[7])
  );
  NOT _168_ (
    .A(active),
    .Y(_014_)
  );
  NOT _169_ (
    .A(valid3),
    .Y(_015_)
  );
  NOR _170_ (
    .A(_015_),
    .B(_014_),
    .Y(_016_)
  );
  NOR _171_ (
    .A(_016_),
    .B(recirculadorsintetizadosintetizadosintetizadosintetizadosintetizado_activo3[0]),
    .Y(_017_)
  );
  NOT _172_ (
    .A(data_in3[0]),
    .Y(_018_)
  );
  NAND _173_ (
    .A(_016_),
    .B(_018_),
    .Y(_019_)
  );
  NAND _174_ (
    .A(_019_),
    .B(reset),
    .Y(_020_)
  );
  NOR _175_ (
    .A(_020_),
    .B(_017_),
    .Y(_003_[0])
  );
  NOR _176_ (
    .A(_016_),
    .B(recirculadorsintetizadosintetizadosintetizadosintetizadosintetizado_activo3[1]),
    .Y(_021_)
  );
  NOT _177_ (
    .A(data_in3[1]),
    .Y(_022_)
  );
  NAND _178_ (
    .A(_016_),
    .B(_022_),
    .Y(_023_)
  );
  NAND _179_ (
    .A(_023_),
    .B(reset),
    .Y(_024_)
  );
  NOR _180_ (
    .A(_024_),
    .B(_021_),
    .Y(_003_[1])
  );
  NOR _181_ (
    .A(_016_),
    .B(recirculadorsintetizadosintetizadosintetizadosintetizadosintetizado_activo3[2]),
    .Y(_025_)
  );
  NOT _182_ (
    .A(data_in3[2]),
    .Y(_026_)
  );
  NAND _183_ (
    .A(_016_),
    .B(_026_),
    .Y(_027_)
  );
  NAND _184_ (
    .A(_027_),
    .B(reset),
    .Y(_028_)
  );
  NOR _185_ (
    .A(_028_),
    .B(_025_),
    .Y(_003_[2])
  );
  NOR _186_ (
    .A(_016_),
    .B(recirculadorsintetizadosintetizadosintetizadosintetizadosintetizado_activo3[3]),
    .Y(_029_)
  );
  NOT _187_ (
    .A(data_in3[3]),
    .Y(_030_)
  );
  NAND _188_ (
    .A(_016_),
    .B(_030_),
    .Y(_031_)
  );
  NAND _189_ (
    .A(_031_),
    .B(reset),
    .Y(_032_)
  );
  NOR _190_ (
    .A(_032_),
    .B(_029_),
    .Y(_003_[3])
  );
  NOR _191_ (
    .A(_016_),
    .B(recirculadorsintetizadosintetizadosintetizadosintetizadosintetizado_activo3[4]),
    .Y(_033_)
  );
  NOT _192_ (
    .A(data_in3[4]),
    .Y(_034_)
  );
  NAND _193_ (
    .A(_016_),
    .B(_034_),
    .Y(_035_)
  );
  NAND _194_ (
    .A(_035_),
    .B(reset),
    .Y(_036_)
  );
  NOR _195_ (
    .A(_036_),
    .B(_033_),
    .Y(_003_[4])
  );
  NOR _196_ (
    .A(_016_),
    .B(recirculadorsintetizadosintetizadosintetizadosintetizadosintetizado_activo3[5]),
    .Y(_037_)
  );
  NOT _197_ (
    .A(data_in3[5]),
    .Y(_038_)
  );
  NAND _198_ (
    .A(_016_),
    .B(_038_),
    .Y(_039_)
  );
  NAND _199_ (
    .A(_039_),
    .B(reset),
    .Y(_040_)
  );
  NOR _200_ (
    .A(_040_),
    .B(_037_),
    .Y(_003_[5])
  );
  NOR _201_ (
    .A(_016_),
    .B(recirculadorsintetizadosintetizadosintetizadosintetizadosintetizado_activo3[6]),
    .Y(_041_)
  );
  NOT _202_ (
    .A(data_in3[6]),
    .Y(_042_)
  );
  NAND _203_ (
    .A(_016_),
    .B(_042_),
    .Y(_043_)
  );
  NAND _204_ (
    .A(_043_),
    .B(reset),
    .Y(_044_)
  );
  NOR _205_ (
    .A(_044_),
    .B(_041_),
    .Y(_003_[6])
  );
  NOR _206_ (
    .A(_016_),
    .B(recirculadorsintetizadosintetizadosintetizadosintetizadosintetizado_activo3[7]),
    .Y(_045_)
  );
  NOT _207_ (
    .A(data_in3[7]),
    .Y(_046_)
  );
  NAND _208_ (
    .A(_016_),
    .B(_046_),
    .Y(_047_)
  );
  NAND _209_ (
    .A(_047_),
    .B(reset),
    .Y(_048_)
  );
  NOR _210_ (
    .A(_048_),
    .B(_045_),
    .Y(_003_[7])
  );
  NOT _211_ (
    .A(valid2),
    .Y(_049_)
  );
  NOR _212_ (
    .A(_049_),
    .B(_014_),
    .Y(_050_)
  );
  NOR _213_ (
    .A(_050_),
    .B(recirculadorsintetizadosintetizadosintetizadosintetizadosintetizado_activo2[0]),
    .Y(_051_)
  );
  NOT _214_ (
    .A(data_in2[0]),
    .Y(_052_)
  );
  NAND _215_ (
    .A(_050_),
    .B(_052_),
    .Y(_053_)
  );
  NAND _216_ (
    .A(_053_),
    .B(reset),
    .Y(_054_)
  );
  NOR _217_ (
    .A(_054_),
    .B(_051_),
    .Y(_002_[0])
  );
  NOR _218_ (
    .A(_050_),
    .B(recirculadorsintetizadosintetizadosintetizadosintetizadosintetizado_activo2[1]),
    .Y(_055_)
  );
  NOT _219_ (
    .A(data_in2[1]),
    .Y(_056_)
  );
  NAND _220_ (
    .A(_050_),
    .B(_056_),
    .Y(_057_)
  );
  NAND _221_ (
    .A(_057_),
    .B(reset),
    .Y(_058_)
  );
  NOR _222_ (
    .A(_058_),
    .B(_055_),
    .Y(_002_[1])
  );
  NOR _223_ (
    .A(_050_),
    .B(recirculadorsintetizadosintetizadosintetizadosintetizadosintetizado_activo2[2]),
    .Y(_059_)
  );
  NOT _224_ (
    .A(data_in2[2]),
    .Y(_060_)
  );
  NAND _225_ (
    .A(_050_),
    .B(_060_),
    .Y(_061_)
  );
  NAND _226_ (
    .A(_061_),
    .B(reset),
    .Y(_062_)
  );
  NOR _227_ (
    .A(_062_),
    .B(_059_),
    .Y(_002_[2])
  );
  NOR _228_ (
    .A(_050_),
    .B(recirculadorsintetizadosintetizadosintetizadosintetizadosintetizado_activo2[3]),
    .Y(_063_)
  );
  NOT _229_ (
    .A(data_in2[3]),
    .Y(_064_)
  );
  NAND _230_ (
    .A(_050_),
    .B(_064_),
    .Y(_065_)
  );
  NAND _231_ (
    .A(_065_),
    .B(reset),
    .Y(_066_)
  );
  NOR _232_ (
    .A(_066_),
    .B(_063_),
    .Y(_002_[3])
  );
  NOR _233_ (
    .A(_050_),
    .B(recirculadorsintetizadosintetizadosintetizadosintetizadosintetizado_activo2[4]),
    .Y(_067_)
  );
  NOT _234_ (
    .A(data_in2[4]),
    .Y(_068_)
  );
  NAND _235_ (
    .A(_050_),
    .B(_068_),
    .Y(_069_)
  );
  NAND _236_ (
    .A(_069_),
    .B(reset),
    .Y(_070_)
  );
  NOR _237_ (
    .A(_070_),
    .B(_067_),
    .Y(_002_[4])
  );
  NOR _238_ (
    .A(_050_),
    .B(recirculadorsintetizadosintetizadosintetizadosintetizadosintetizado_activo2[5]),
    .Y(_071_)
  );
  NOT _239_ (
    .A(data_in2[5]),
    .Y(_072_)
  );
  NAND _240_ (
    .A(_050_),
    .B(_072_),
    .Y(_073_)
  );
  NAND _241_ (
    .A(_073_),
    .B(reset),
    .Y(_074_)
  );
  NOR _242_ (
    .A(_074_),
    .B(_071_),
    .Y(_002_[5])
  );
  NOR _243_ (
    .A(_050_),
    .B(recirculadorsintetizadosintetizadosintetizadosintetizadosintetizado_activo2[6]),
    .Y(_075_)
  );
  NOT _244_ (
    .A(data_in2[6]),
    .Y(_076_)
  );
  NAND _245_ (
    .A(_050_),
    .B(_076_),
    .Y(_077_)
  );
  NAND _246_ (
    .A(_077_),
    .B(reset),
    .Y(_078_)
  );
  NOR _247_ (
    .A(_078_),
    .B(_075_),
    .Y(_002_[6])
  );
  NOR _248_ (
    .A(_050_),
    .B(recirculadorsintetizadosintetizadosintetizadosintetizadosintetizado_activo2[7]),
    .Y(_079_)
  );
  NOT _249_ (
    .A(data_in2[7]),
    .Y(_080_)
  );
  NAND _250_ (
    .A(_050_),
    .B(_080_),
    .Y(_081_)
  );
  NAND _251_ (
    .A(_081_),
    .B(reset),
    .Y(_082_)
  );
  NOR _252_ (
    .A(_082_),
    .B(_079_),
    .Y(_002_[7])
  );
  NOT _253_ (
    .A(valid1),
    .Y(_083_)
  );
  NOR _254_ (
    .A(_014_),
    .B(_083_),
    .Y(_084_)
  );
  NOR _255_ (
    .A(_084_),
    .B(recirculadorsintetizadosintetizadosintetizadosintetizadosintetizado_activo1[0]),
    .Y(_085_)
  );
  NOT _256_ (
    .A(data_in1[0]),
    .Y(_086_)
  );
  NAND _257_ (
    .A(_084_),
    .B(_086_),
    .Y(_087_)
  );
  NAND _258_ (
    .A(_087_),
    .B(reset),
    .Y(_088_)
  );
  NOR _259_ (
    .A(_088_),
    .B(_085_),
    .Y(_001_[0])
  );
  NOR _260_ (
    .A(_084_),
    .B(recirculadorsintetizadosintetizadosintetizadosintetizadosintetizado_activo1[1]),
    .Y(_089_)
  );
  NOT _261_ (
    .A(data_in1[1]),
    .Y(_090_)
  );
  NAND _262_ (
    .A(_084_),
    .B(_090_),
    .Y(_091_)
  );
  NAND _263_ (
    .A(_091_),
    .B(reset),
    .Y(_092_)
  );
  NOR _264_ (
    .A(_092_),
    .B(_089_),
    .Y(_001_[1])
  );
  NOR _265_ (
    .A(_084_),
    .B(recirculadorsintetizadosintetizadosintetizadosintetizadosintetizado_activo1[2]),
    .Y(_093_)
  );
  NOT _266_ (
    .A(data_in1[2]),
    .Y(_094_)
  );
  NAND _267_ (
    .A(_084_),
    .B(_094_),
    .Y(_095_)
  );
  NAND _268_ (
    .A(_095_),
    .B(reset),
    .Y(_096_)
  );
  NOR _269_ (
    .A(_096_),
    .B(_093_),
    .Y(_001_[2])
  );
  NOR _270_ (
    .A(_084_),
    .B(recirculadorsintetizadosintetizadosintetizadosintetizadosintetizado_activo1[3]),
    .Y(_097_)
  );
  NOT _271_ (
    .A(data_in1[3]),
    .Y(_098_)
  );
  NAND _272_ (
    .A(_084_),
    .B(_098_),
    .Y(_099_)
  );
  NAND _273_ (
    .A(_099_),
    .B(reset),
    .Y(_100_)
  );
  NOR _274_ (
    .A(_100_),
    .B(_097_),
    .Y(_001_[3])
  );
  NOR _275_ (
    .A(_084_),
    .B(recirculadorsintetizadosintetizadosintetizadosintetizadosintetizado_activo1[4]),
    .Y(_101_)
  );
  NOT _276_ (
    .A(data_in1[4]),
    .Y(_102_)
  );
  NAND _277_ (
    .A(_084_),
    .B(_102_),
    .Y(_103_)
  );
  NAND _278_ (
    .A(_103_),
    .B(reset),
    .Y(_104_)
  );
  NOR _279_ (
    .A(_104_),
    .B(_101_),
    .Y(_001_[4])
  );
  NOR _280_ (
    .A(_084_),
    .B(recirculadorsintetizadosintetizadosintetizadosintetizadosintetizado_activo1[5]),
    .Y(_105_)
  );
  NOT _281_ (
    .A(data_in1[5]),
    .Y(_106_)
  );
  NAND _282_ (
    .A(_084_),
    .B(_106_),
    .Y(_107_)
  );
  NAND _283_ (
    .A(_107_),
    .B(reset),
    .Y(_108_)
  );
  NOR _284_ (
    .A(_108_),
    .B(_105_),
    .Y(_001_[5])
  );
  NOR _285_ (
    .A(_084_),
    .B(recirculadorsintetizadosintetizadosintetizadosintetizadosintetizado_activo1[6]),
    .Y(_109_)
  );
  NOT _286_ (
    .A(data_in1[6]),
    .Y(_110_)
  );
  NAND _287_ (
    .A(_084_),
    .B(_110_),
    .Y(_111_)
  );
  NAND _288_ (
    .A(_111_),
    .B(reset),
    .Y(_112_)
  );
  NOR _289_ (
    .A(_112_),
    .B(_109_),
    .Y(_001_[6])
  );
  NOR _290_ (
    .A(_084_),
    .B(recirculadorsintetizadosintetizadosintetizadosintetizadosintetizado_activo1[7]),
    .Y(_113_)
  );
  NOT _291_ (
    .A(data_in1[7]),
    .Y(_114_)
  );
  NAND _292_ (
    .A(_084_),
    .B(_114_),
    .Y(_115_)
  );
  NAND _293_ (
    .A(_115_),
    .B(reset),
    .Y(_116_)
  );
  NOR _294_ (
    .A(_116_),
    .B(_113_),
    .Y(_001_[7])
  );
  NOT _295_ (
    .A(valid0),
    .Y(_117_)
  );
  NOR _296_ (
    .A(_117_),
    .B(_014_),
    .Y(_118_)
  );
  NOR _297_ (
    .A(_118_),
    .B(recirculadorsintetizadosintetizadosintetizadosintetizadosintetizado_activo0[0]),
    .Y(_119_)
  );
  NOT _298_ (
    .A(data_in0[0]),
    .Y(_120_)
  );
  NAND _299_ (
    .A(_118_),
    .B(_120_),
    .Y(_121_)
  );
  NAND _300_ (
    .A(_121_),
    .B(reset),
    .Y(_122_)
  );
  NOR _301_ (
    .A(_122_),
    .B(_119_),
    .Y(_000_[0])
  );
  NOR _302_ (
    .A(_118_),
    .B(recirculadorsintetizadosintetizadosintetizadosintetizadosintetizado_activo0[1]),
    .Y(_123_)
  );
  NOT _303_ (
    .A(data_in0[1]),
    .Y(_124_)
  );
  NAND _304_ (
    .A(_118_),
    .B(_124_),
    .Y(_125_)
  );
  NAND _305_ (
    .A(_125_),
    .B(reset),
    .Y(_126_)
  );
  NOR _306_ (
    .A(_126_),
    .B(_123_),
    .Y(_000_[1])
  );
  NOR _307_ (
    .A(_118_),
    .B(recirculadorsintetizadosintetizadosintetizadosintetizadosintetizado_activo0[2]),
    .Y(_127_)
  );
  NOT _308_ (
    .A(data_in0[2]),
    .Y(_128_)
  );
  NAND _309_ (
    .A(_118_),
    .B(_128_),
    .Y(_129_)
  );
  NAND _310_ (
    .A(_129_),
    .B(reset),
    .Y(_130_)
  );
  NOR _311_ (
    .A(_130_),
    .B(_127_),
    .Y(_000_[2])
  );
  NOR _312_ (
    .A(_118_),
    .B(recirculadorsintetizadosintetizadosintetizadosintetizadosintetizado_activo0[3]),
    .Y(_131_)
  );
  NOT _313_ (
    .A(data_in0[3]),
    .Y(_132_)
  );
  NAND _314_ (
    .A(_118_),
    .B(_132_),
    .Y(_133_)
  );
  NAND _315_ (
    .A(_133_),
    .B(reset),
    .Y(_134_)
  );
  NOR _316_ (
    .A(_134_),
    .B(_131_),
    .Y(_000_[3])
  );
  NOR _317_ (
    .A(_118_),
    .B(recirculadorsintetizadosintetizadosintetizadosintetizadosintetizado_activo0[4]),
    .Y(_135_)
  );
  NOT _318_ (
    .A(data_in0[4]),
    .Y(_136_)
  );
  NAND _319_ (
    .A(_118_),
    .B(_136_),
    .Y(_137_)
  );
  NAND _320_ (
    .A(_137_),
    .B(reset),
    .Y(_138_)
  );
  NOR _321_ (
    .A(_138_),
    .B(_135_),
    .Y(_000_[4])
  );
  NOR _322_ (
    .A(_118_),
    .B(recirculadorsintetizadosintetizadosintetizadosintetizadosintetizado_activo0[5]),
    .Y(_139_)
  );
  NOT _323_ (
    .A(data_in0[5]),
    .Y(_140_)
  );
  NAND _324_ (
    .A(_118_),
    .B(_140_),
    .Y(_141_)
  );
  NAND _325_ (
    .A(_141_),
    .B(reset),
    .Y(_142_)
  );
  NOR _326_ (
    .A(_142_),
    .B(_139_),
    .Y(_000_[5])
  );
  NOR _327_ (
    .A(_118_),
    .B(recirculadorsintetizadosintetizadosintetizadosintetizadosintetizado_activo0[6]),
    .Y(_143_)
  );
  NOT _328_ (
    .A(data_in0[6]),
    .Y(_144_)
  );
  NAND _329_ (
    .A(_118_),
    .B(_144_),
    .Y(_145_)
  );
  NAND _330_ (
    .A(_145_),
    .B(reset),
    .Y(_146_)
  );
  NOR _331_ (
    .A(_146_),
    .B(_143_),
    .Y(_000_[6])
  );
  NOR _332_ (
    .A(_118_),
    .B(recirculadorsintetizadosintetizadosintetizadosintetizadosintetizado_activo0[7]),
    .Y(_147_)
  );
  NOT _333_ (
    .A(data_in0[7]),
    .Y(_148_)
  );
  NAND _334_ (
    .A(_118_),
    .B(_148_),
    .Y(_149_)
  );
  NAND _335_ (
    .A(_149_),
    .B(reset),
    .Y(_150_)
  );
  NOR _336_ (
    .A(_150_),
    .B(_147_),
    .Y(_000_[7])
  );
  DFF _337_ (
    .C(clk),
    .D(reset),
    .Q(valid_out_recirculadorsintetizadosintetizadosintetizadosintetizadosintetizado0)
  );
  DFF _338_ (
    .C(clk),
    .D(_000_[0]),
    .Q(recirculadorsintetizadosintetizadosintetizadosintetizadosintetizado_activo0[0])
  );
  DFF _339_ (
    .C(clk),
    .D(_000_[1]),
    .Q(recirculadorsintetizadosintetizadosintetizadosintetizadosintetizado_activo0[1])
  );
  DFF _340_ (
    .C(clk),
    .D(_000_[2]),
    .Q(recirculadorsintetizadosintetizadosintetizadosintetizadosintetizado_activo0[2])
  );
  DFF _341_ (
    .C(clk),
    .D(_000_[3]),
    .Q(recirculadorsintetizadosintetizadosintetizadosintetizadosintetizado_activo0[3])
  );
  DFF _342_ (
    .C(clk),
    .D(_000_[4]),
    .Q(recirculadorsintetizadosintetizadosintetizadosintetizadosintetizado_activo0[4])
  );
  DFF _343_ (
    .C(clk),
    .D(_000_[5]),
    .Q(recirculadorsintetizadosintetizadosintetizadosintetizadosintetizado_activo0[5])
  );
  DFF _344_ (
    .C(clk),
    .D(_000_[6]),
    .Q(recirculadorsintetizadosintetizadosintetizadosintetizadosintetizado_activo0[6])
  );
  DFF _345_ (
    .C(clk),
    .D(_000_[7]),
    .Q(recirculadorsintetizadosintetizadosintetizadosintetizadosintetizado_activo0[7])
  );
  DFF _346_ (
    .C(clk),
    .D(_001_[0]),
    .Q(recirculadorsintetizadosintetizadosintetizadosintetizadosintetizado_activo1[0])
  );
  DFF _347_ (
    .C(clk),
    .D(_001_[1]),
    .Q(recirculadorsintetizadosintetizadosintetizadosintetizadosintetizado_activo1[1])
  );
  DFF _348_ (
    .C(clk),
    .D(_001_[2]),
    .Q(recirculadorsintetizadosintetizadosintetizadosintetizadosintetizado_activo1[2])
  );
  DFF _349_ (
    .C(clk),
    .D(_001_[3]),
    .Q(recirculadorsintetizadosintetizadosintetizadosintetizadosintetizado_activo1[3])
  );
  DFF _350_ (
    .C(clk),
    .D(_001_[4]),
    .Q(recirculadorsintetizadosintetizadosintetizadosintetizadosintetizado_activo1[4])
  );
  DFF _351_ (
    .C(clk),
    .D(_001_[5]),
    .Q(recirculadorsintetizadosintetizadosintetizadosintetizadosintetizado_activo1[5])
  );
  DFF _352_ (
    .C(clk),
    .D(_001_[6]),
    .Q(recirculadorsintetizadosintetizadosintetizadosintetizadosintetizado_activo1[6])
  );
  DFF _353_ (
    .C(clk),
    .D(_001_[7]),
    .Q(recirculadorsintetizadosintetizadosintetizadosintetizadosintetizado_activo1[7])
  );
  DFF _354_ (
    .C(clk),
    .D(_002_[0]),
    .Q(recirculadorsintetizadosintetizadosintetizadosintetizadosintetizado_activo2[0])
  );
  DFF _355_ (
    .C(clk),
    .D(_002_[1]),
    .Q(recirculadorsintetizadosintetizadosintetizadosintetizadosintetizado_activo2[1])
  );
  DFF _356_ (
    .C(clk),
    .D(_002_[2]),
    .Q(recirculadorsintetizadosintetizadosintetizadosintetizadosintetizado_activo2[2])
  );
  DFF _357_ (
    .C(clk),
    .D(_002_[3]),
    .Q(recirculadorsintetizadosintetizadosintetizadosintetizadosintetizado_activo2[3])
  );
  DFF _358_ (
    .C(clk),
    .D(_002_[4]),
    .Q(recirculadorsintetizadosintetizadosintetizadosintetizadosintetizado_activo2[4])
  );
  DFF _359_ (
    .C(clk),
    .D(_002_[5]),
    .Q(recirculadorsintetizadosintetizadosintetizadosintetizadosintetizado_activo2[5])
  );
  DFF _360_ (
    .C(clk),
    .D(_002_[6]),
    .Q(recirculadorsintetizadosintetizadosintetizadosintetizadosintetizado_activo2[6])
  );
  DFF _361_ (
    .C(clk),
    .D(_002_[7]),
    .Q(recirculadorsintetizadosintetizadosintetizadosintetizadosintetizado_activo2[7])
  );
  DFF _362_ (
    .C(clk),
    .D(_003_[0]),
    .Q(recirculadorsintetizadosintetizadosintetizadosintetizadosintetizado_activo3[0])
  );
  DFF _363_ (
    .C(clk),
    .D(_003_[1]),
    .Q(recirculadorsintetizadosintetizadosintetizadosintetizadosintetizado_activo3[1])
  );
  DFF _364_ (
    .C(clk),
    .D(_003_[2]),
    .Q(recirculadorsintetizadosintetizadosintetizadosintetizadosintetizado_activo3[2])
  );
  DFF _365_ (
    .C(clk),
    .D(_003_[3]),
    .Q(recirculadorsintetizadosintetizadosintetizadosintetizadosintetizado_activo3[3])
  );
  DFF _366_ (
    .C(clk),
    .D(_003_[4]),
    .Q(recirculadorsintetizadosintetizadosintetizadosintetizadosintetizado_activo3[4])
  );
  DFF _367_ (
    .C(clk),
    .D(_003_[5]),
    .Q(recirculadorsintetizadosintetizadosintetizadosintetizadosintetizado_activo3[5])
  );
  DFF _368_ (
    .C(clk),
    .D(_003_[6]),
    .Q(recirculadorsintetizadosintetizadosintetizadosintetizadosintetizado_activo3[6])
  );
  DFF _369_ (
    .C(clk),
    .D(_003_[7]),
    .Q(recirculadorsintetizadosintetizadosintetizadosintetizadosintetizado_activo3[7])
  );
  DFF _370_ (
    .C(clk),
    .D(_004_[0]),
    .Q(recirculadorsintetizadosintetizadosintetizadosintetizadosintetizado_desactivado0[0])
  );
  DFF _371_ (
    .C(clk),
    .D(_004_[1]),
    .Q(recirculadorsintetizadosintetizadosintetizadosintetizadosintetizado_desactivado0[1])
  );
  DFF _372_ (
    .C(clk),
    .D(_004_[2]),
    .Q(recirculadorsintetizadosintetizadosintetizadosintetizadosintetizado_desactivado0[2])
  );
  DFF _373_ (
    .C(clk),
    .D(_004_[3]),
    .Q(recirculadorsintetizadosintetizadosintetizadosintetizadosintetizado_desactivado0[3])
  );
  DFF _374_ (
    .C(clk),
    .D(_004_[4]),
    .Q(recirculadorsintetizadosintetizadosintetizadosintetizadosintetizado_desactivado0[4])
  );
  DFF _375_ (
    .C(clk),
    .D(_004_[5]),
    .Q(recirculadorsintetizadosintetizadosintetizadosintetizadosintetizado_desactivado0[5])
  );
  DFF _376_ (
    .C(clk),
    .D(_004_[6]),
    .Q(recirculadorsintetizadosintetizadosintetizadosintetizadosintetizado_desactivado0[6])
  );
  DFF _377_ (
    .C(clk),
    .D(_004_[7]),
    .Q(recirculadorsintetizadosintetizadosintetizadosintetizadosintetizado_desactivado0[7])
  );
  assign recirculadorsintetizadosintetizadosintetizadosintetizadosintetizado_desactivado1 = 8'b00000000;
  assign recirculadorsintetizadosintetizadosintetizadosintetizadosintetizado_desactivado2 = 8'b00000000;
  assign recirculadorsintetizadosintetizadosintetizadosintetizadosintetizado_desactivado3 = 8'b00000000;
  assign valid_out_recirculadorsintetizadosintetizadosintetizadosintetizadosintetizado1 = valid_out_recirculador0;
  assign valid_out_recirculadorsintetizadosintetizadosintetizadosintetizadosintetizado2 = valid_out_recirculador0;
  assign valid_out_recirculadorsintetizadosintetizadosintetizadosintetizadosintetizado3 = valid_out_recirculador0;
endmodule

(* src = "serial_paralelosintetizadosintetizadosintetizadosintetizadosintetizado.v:14" *)
module serial_paralelosintetizadosintetizadosintetizadosintetizadosintetizado(IDLin, reset, clk_32f, clk_4f, data_serial_paraleloTX, active_serial_paraleloTX, IDLEOut);
  (* src = "serial_paralelosintetizadosintetizadosintetizadosintetizadosintetizado.v:34" *)
  wire _0000_;
  (* src = "serial_paralelosintetizadosintetizadosintetizadosintetizadosintetizado.v:34" *)
  wire _0001_;
  (* src = "serial_paralelosintetizadosintetizadosintetizadosintetizadosintetizado.v:34" *)
  wire [7:0] _0002_;
  (* src = "serial_paralelosintetizadosintetizadosintetizadosintetizadosintetizado.v:34" *)
  wire [7:0] _0003_;
  (* src = "serial_paralelosintetizadosintetizadosintetizadosintetizadosintetizado.v:34" *)
  wire [31:0] _0004_;
  (* src = "serial_paralelosintetizadosintetizadosintetizadosintetizadosintetizado.v:34" *)
  wire [31:0] _0005_;
  (* src = "serial_paralelosintetizadosintetizadosintetizadosintetizadosintetizado.v:34" *)
  wire [7:0] _0006_;
  wire _0007_;
  wire _0008_;
  wire _0009_;
  wire _0010_;
  wire _0011_;
  wire _0012_;
  wire _0013_;
  wire _0014_;
  wire _0015_;
  wire _0016_;
  wire _0017_;
  wire _0018_;
  wire _0019_;
  wire _0020_;
  wire _0021_;
  wire _0022_;
  wire _0023_;
  wire _0024_;
  wire _0025_;
  wire _0026_;
  wire _0027_;
  wire _0028_;
  wire _0029_;
  wire _0030_;
  wire _0031_;
  wire _0032_;
  wire _0033_;
  wire _0034_;
  wire _0035_;
  wire _0036_;
  wire _0037_;
  wire _0038_;
  wire _0039_;
  wire _0040_;
  wire _0041_;
  wire _0042_;
  wire _0043_;
  wire _0044_;
  wire _0045_;
  wire _0046_;
  wire _0047_;
  wire _0048_;
  wire _0049_;
  wire _0050_;
  wire _0051_;
  wire _0052_;
  wire _0053_;
  wire _0054_;
  wire _0055_;
  wire _0056_;
  wire _0057_;
  wire _0058_;
  wire _0059_;
  wire _0060_;
  wire _0061_;
  wire _0062_;
  wire _0063_;
  wire _0064_;
  wire _0065_;
  wire _0066_;
  wire _0067_;
  wire _0068_;
  wire _0069_;
  wire _0070_;
  wire _0071_;
  wire _0072_;
  wire _0073_;
  wire _0074_;
  wire _0075_;
  wire _0076_;
  wire _0077_;
  wire _0078_;
  wire _0079_;
  wire _0080_;
  wire _0081_;
  wire _0082_;
  wire _0083_;
  wire _0084_;
  wire _0085_;
  wire _0086_;
  wire _0087_;
  wire _0088_;
  wire _0089_;
  wire _0090_;
  wire _0091_;
  wire _0092_;
  wire _0093_;
  wire _0094_;
  wire _0095_;
  wire _0096_;
  wire _0097_;
  wire _0098_;
  wire _0099_;
  wire _0100_;
  wire _0101_;
  wire _0102_;
  wire _0103_;
  wire _0104_;
  wire _0105_;
  wire _0106_;
  wire _0107_;
  wire _0108_;
  wire _0109_;
  wire _0110_;
  wire _0111_;
  wire _0112_;
  wire _0113_;
  wire _0114_;
  wire _0115_;
  wire _0116_;
  wire _0117_;
  wire _0118_;
  wire _0119_;
  wire _0120_;
  wire _0121_;
  wire _0122_;
  wire _0123_;
  wire _0124_;
  wire _0125_;
  wire _0126_;
  wire _0127_;
  wire _0128_;
  wire _0129_;
  wire _0130_;
  wire _0131_;
  wire _0132_;
  wire _0133_;
  wire _0134_;
  wire _0135_;
  wire _0136_;
  wire _0137_;
  wire _0138_;
  wire _0139_;
  wire _0140_;
  wire _0141_;
  wire _0142_;
  wire _0143_;
  wire _0144_;
  wire _0145_;
  wire _0146_;
  wire _0147_;
  wire _0148_;
  wire _0149_;
  wire _0150_;
  wire _0151_;
  wire _0152_;
  wire _0153_;
  wire _0154_;
  wire _0155_;
  wire _0156_;
  wire _0157_;
  wire _0158_;
  wire _0159_;
  wire _0160_;
  wire _0161_;
  wire _0162_;
  wire _0163_;
  wire _0164_;
  wire _0165_;
  wire _0166_;
  wire _0167_;
  wire _0168_;
  wire _0169_;
  wire _0170_;
  wire _0171_;
  wire _0172_;
  wire _0173_;
  wire _0174_;
  wire _0175_;
  wire _0176_;
  wire _0177_;
  wire _0178_;
  wire _0179_;
  wire _0180_;
  wire _0181_;
  wire _0182_;
  wire _0183_;
  wire _0184_;
  wire _0185_;
  wire _0186_;
  wire _0187_;
  wire _0188_;
  wire _0189_;
  wire _0190_;
  wire _0191_;
  wire _0192_;
  wire _0193_;
  wire _0194_;
  wire _0195_;
  wire _0196_;
  wire _0197_;
  wire _0198_;
  wire _0199_;
  wire _0200_;
  wire _0201_;
  wire _0202_;
  wire _0203_;
  wire _0204_;
  wire _0205_;
  wire _0206_;
  wire _0207_;
  wire _0208_;
  wire _0209_;
  wire _0210_;
  wire _0211_;
  wire _0212_;
  wire _0213_;
  wire _0214_;
  wire _0215_;
  wire _0216_;
  wire _0217_;
  wire _0218_;
  wire _0219_;
  wire _0220_;
  wire _0221_;
  wire _0222_;
  wire _0223_;
  wire _0224_;
  wire _0225_;
  wire _0226_;
  wire _0227_;
  wire _0228_;
  wire _0229_;
  wire _0230_;
  wire _0231_;
  wire _0232_;
  wire _0233_;
  wire _0234_;
  wire _0235_;
  wire _0236_;
  wire _0237_;
  wire _0238_;
  wire _0239_;
  wire _0240_;
  wire _0241_;
  wire _0242_;
  wire _0243_;
  wire _0244_;
  wire _0245_;
  wire _0246_;
  wire _0247_;
  wire _0248_;
  wire _0249_;
  wire _0250_;
  wire _0251_;
  wire _0252_;
  wire _0253_;
  wire _0254_;
  wire _0255_;
  wire _0256_;
  wire _0257_;
  wire _0258_;
  wire _0259_;
  wire _0260_;
  wire _0261_;
  wire _0262_;
  wire _0263_;
  wire _0264_;
  wire _0265_;
  wire _0266_;
  wire _0267_;
  wire _0268_;
  wire _0269_;
  wire _0270_;
  wire _0271_;
  wire _0272_;
  wire _0273_;
  wire _0274_;
  wire _0275_;
  wire _0276_;
  wire _0277_;
  wire _0278_;
  wire _0279_;
  wire _0280_;
  wire _0281_;
  wire _0282_;
  wire _0283_;
  wire _0284_;
  wire _0285_;
  wire _0286_;
  wire _0287_;
  wire _0288_;
  wire _0289_;
  wire _0290_;
  wire _0291_;
  wire _0292_;
  wire _0293_;
  wire _0294_;
  wire _0295_;
  wire _0296_;
  wire _0297_;
  wire _0298_;
  wire _0299_;
  wire _0300_;
  wire _0301_;
  wire _0302_;
  wire _0303_;
  wire _0304_;
  wire _0305_;
  wire _0306_;
  wire _0307_;
  wire _0308_;
  wire _0309_;
  wire _0310_;
  wire _0311_;
  wire _0312_;
  wire _0313_;
  wire _0314_;
  wire _0315_;
  wire _0316_;
  wire _0317_;
  wire _0318_;
  wire _0319_;
  wire _0320_;
  wire _0321_;
  wire _0322_;
  wire _0323_;
  wire _0324_;
  wire _0325_;
  wire _0326_;
  wire _0327_;
  wire _0328_;
  wire _0329_;
  wire _0330_;
  wire _0331_;
  wire _0332_;
  wire _0333_;
  wire _0334_;
  wire _0335_;
  wire _0336_;
  wire _0337_;
  wire _0338_;
  wire _0339_;
  wire _0340_;
  wire _0341_;
  wire _0342_;
  wire _0343_;
  wire _0344_;
  wire _0345_;
  wire _0346_;
  wire _0347_;
  wire _0348_;
  wire _0349_;
  wire _0350_;
  wire _0351_;
  wire _0352_;
  wire _0353_;
  wire _0354_;
  wire _0355_;
  wire _0356_;
  wire _0357_;
  wire _0358_;
  wire _0359_;
  wire _0360_;
  wire _0361_;
  wire _0362_;
  wire _0363_;
  wire _0364_;
  wire _0365_;
  wire _0366_;
  wire _0367_;
  wire _0368_;
  wire _0369_;
  wire _0370_;
  wire _0371_;
  wire _0372_;
  wire _0373_;
  wire _0374_;
  wire _0375_;
  wire _0376_;
  wire _0377_;
  wire _0378_;
  wire _0379_;
  wire _0380_;
  wire _0381_;
  wire _0382_;
  wire _0383_;
  wire _0384_;
  wire _0385_;
  wire _0386_;
  wire _0387_;
  wire _0388_;
  wire _0389_;
  wire _0390_;
  wire _0391_;
  wire _0392_;
  wire _0393_;
  wire _0394_;
  wire _0395_;
  wire _0396_;
  wire _0397_;
  wire _0398_;
  wire _0399_;
  wire _0400_;
  wire _0401_;
  wire _0402_;
  wire _0403_;
  wire _0404_;
  wire _0405_;
  wire _0406_;
  wire _0407_;
  wire _0408_;
  wire _0409_;
  wire _0410_;
  wire _0411_;
  wire _0412_;
  wire _0413_;
  wire _0414_;
  wire _0415_;
  wire _0416_;
  wire _0417_;
  wire _0418_;
  wire _0419_;
  wire _0420_;
  wire _0421_;
  wire _0422_;
  wire _0423_;
  wire _0424_;
  wire _0425_;
  wire _0426_;
  wire _0427_;
  wire _0428_;
  wire _0429_;
  wire _0430_;
  wire _0431_;
  wire _0432_;
  wire _0433_;
  wire _0434_;
  wire _0435_;
  wire _0436_;
  wire _0437_;
  wire _0438_;
  wire _0439_;
  wire _0440_;
  wire _0441_;
  wire _0442_;
  wire _0443_;
  wire _0444_;
  wire _0445_;
  wire _0446_;
  wire _0447_;
  wire _0448_;
  wire _0449_;
  wire _0450_;
  wire _0451_;
  wire _0452_;
  wire _0453_;
  wire _0454_;
  wire _0455_;
  wire _0456_;
  wire _0457_;
  wire _0458_;
  wire _0459_;
  wire _0460_;
  wire _0461_;
  wire _0462_;
  wire _0463_;
  wire _0464_;
  wire _0465_;
  wire _0466_;
  wire _0467_;
  wire _0468_;
  wire _0469_;
  wire _0470_;
  wire _0471_;
  wire _0472_;
  wire _0473_;
  wire _0474_;
  wire _0475_;
  wire _0476_;
  wire _0477_;
  wire _0478_;
  wire _0479_;
  wire _0480_;
  wire _0481_;
  wire _0482_;
  wire _0483_;
  wire _0484_;
  wire _0485_;
  wire _0486_;
  wire _0487_;
  wire _0488_;
  wire _0489_;
  wire _0490_;
  wire _0491_;
  wire _0492_;
  wire _0493_;
  wire _0494_;
  wire _0495_;
  wire _0496_;
  wire _0497_;
  wire _0498_;
  wire _0499_;
  wire _0500_;
  wire _0501_;
  wire _0502_;
  wire _0503_;
  wire _0504_;
  wire _0505_;
  wire _0506_;
  wire _0507_;
  wire _0508_;
  wire _0509_;
  wire _0510_;
  wire _0511_;
  wire _0512_;
  wire _0513_;
  wire _0514_;
  wire _0515_;
  wire _0516_;
  wire _0517_;
  wire _0518_;
  wire _0519_;
  wire _0520_;
  wire _0521_;
  wire _0522_;
  wire _0523_;
  wire _0524_;
  (* src = "serial_paralelosintetizadosintetizadosintetizadosintetizadosintetizado.v:25" *)
  output IDLEOut;
  (* src = "serial_paralelosintetizadosintetizadosintetizadosintetizadosintetizado.v:17" *)
  input IDLin;
  (* src = "serial_paralelosintetizadosintetizadosintetizadosintetizadosintetizado.v:24" *)
  output active_serial_paralelosintetizadosintetizadosintetizadosintetizadosintetizadoTX;
  (* src = "serial_paralelosintetizadosintetizadosintetizadosintetizadosintetizado.v:28" *)
  wire [7:0] buffer;
  (* src = "serial_paralelosintetizadosintetizadosintetizadosintetizadosintetizado.v:29" *)
  wire [7:0] buffer_pasado;
  (* src = "serial_paralelosintetizadosintetizadosintetizadosintetizadosintetizado.v:19" *)
  input clk_32f;
  (* src = "serial_paralelosintetizadosintetizadosintetizadosintetizadosintetizado.v:20" *)
  input clk_4f;
  (* src = "serial_paralelosintetizadosintetizadosintetizadosintetizadosintetizado.v:31" *)
  wire [31:0] contador;
  (* src = "serial_paralelosintetizadosintetizadosintetizadosintetizadosintetizado.v:32" *)
  wire [31:0] contador_BC;
  (* src = "serial_paralelosintetizadosintetizadosintetizadosintetizadosintetizado.v:23" *)
  output [7:0] data_serial_paralelosintetizadosintetizadosintetizadosintetizadosintetizadoTX;
  (* src = "serial_paralelosintetizadosintetizadosintetizadosintetizadosintetizado.v:18" *)
  input reset;
  NOT _0525_ (
    .A(reset),
    .Y(_0007_)
  );
  NAND _0526_ (
    .A(_0007_),
    .B(data_serial_paralelosintetizadosintetizadosintetizadosintetizadosintetizadoTX[7]),
    .Y(_0008_)
  );
  NOT _0527_ (
    .A(buffer[2]),
    .Y(_0009_)
  );
  NOT _0528_ (
    .A(buffer[3]),
    .Y(_0010_)
  );
  NOR _0529_ (
    .A(_0010_),
    .B(_0009_),
    .Y(_0011_)
  );
  NOT _0530_ (
    .A(buffer[4]),
    .Y(_0012_)
  );
  NOT _0531_ (
    .A(buffer[5]),
    .Y(_0013_)
  );
  NOR _0532_ (
    .A(_0013_),
    .B(_0012_),
    .Y(_0014_)
  );
  NAND _0533_ (
    .A(_0014_),
    .B(_0011_),
    .Y(_0015_)
  );
  NOR _0534_ (
    .A(buffer[1]),
    .B(buffer[0]),
    .Y(_0016_)
  );
  NOT _0535_ (
    .A(_0016_),
    .Y(_0017_)
  );
  NOT _0536_ (
    .A(buffer[6]),
    .Y(_0018_)
  );
  NAND _0537_ (
    .A(buffer[7]),
    .B(_0018_),
    .Y(_0019_)
  );
  NOR _0538_ (
    .A(_0019_),
    .B(_0017_),
    .Y(_0020_)
  );
  NOT _0539_ (
    .A(_0020_),
    .Y(_0021_)
  );
  NOR _0540_ (
    .A(_0021_),
    .B(_0015_),
    .Y(_0022_)
  );
  NOT _0541_ (
    .A(_0022_),
    .Y(_0023_)
  );
  NOT _0542_ (
    .A(contador_BC[31]),
    .Y(_0024_)
  );
  NOR _0543_ (
    .A(contador_BC[30]),
    .B(contador_BC[29]),
    .Y(_0025_)
  );
  NAND _0544_ (
    .A(_0025_),
    .B(_0024_),
    .Y(_0026_)
  );
  NOR _0545_ (
    .A(contador_BC[26]),
    .B(contador_BC[25]),
    .Y(_0027_)
  );
  NOR _0546_ (
    .A(contador_BC[28]),
    .B(contador_BC[27]),
    .Y(_0028_)
  );
  NAND _0547_ (
    .A(_0028_),
    .B(_0027_),
    .Y(_0029_)
  );
  NOR _0548_ (
    .A(_0029_),
    .B(_0026_),
    .Y(_0030_)
  );
  NOR _0549_ (
    .A(contador_BC[22]),
    .B(contador_BC[21]),
    .Y(_0031_)
  );
  NOR _0550_ (
    .A(contador_BC[24]),
    .B(contador_BC[23]),
    .Y(_0032_)
  );
  NAND _0551_ (
    .A(_0032_),
    .B(_0031_),
    .Y(_0033_)
  );
  NOR _0552_ (
    .A(contador_BC[18]),
    .B(contador_BC[17]),
    .Y(_0034_)
  );
  NOR _0553_ (
    .A(contador_BC[20]),
    .B(contador_BC[19]),
    .Y(_0035_)
  );
  NAND _0554_ (
    .A(_0035_),
    .B(_0034_),
    .Y(_0036_)
  );
  NOR _0555_ (
    .A(_0036_),
    .B(_0033_),
    .Y(_0037_)
  );
  NAND _0556_ (
    .A(_0037_),
    .B(_0030_),
    .Y(_0038_)
  );
  NOT _0557_ (
    .A(contador_BC[3]),
    .Y(_0039_)
  );
  NOT _0558_ (
    .A(contador_BC[4]),
    .Y(_0040_)
  );
  NAND _0559_ (
    .A(_0040_),
    .B(_0039_),
    .Y(_0041_)
  );
  NOR _0560_ (
    .A(contador_BC[6]),
    .B(contador_BC[5]),
    .Y(_0042_)
  );
  NOR _0561_ (
    .A(contador_BC[8]),
    .B(contador_BC[7]),
    .Y(_0043_)
  );
  NAND _0562_ (
    .A(_0043_),
    .B(_0042_),
    .Y(_0044_)
  );
  NOR _0563_ (
    .A(_0044_),
    .B(_0041_),
    .Y(_0045_)
  );
  NOR _0564_ (
    .A(contador_BC[14]),
    .B(contador_BC[13]),
    .Y(_0046_)
  );
  NOR _0565_ (
    .A(contador_BC[16]),
    .B(contador_BC[15]),
    .Y(_0047_)
  );
  NAND _0566_ (
    .A(_0047_),
    .B(_0046_),
    .Y(_0048_)
  );
  NOR _0567_ (
    .A(contador_BC[10]),
    .B(contador_BC[9]),
    .Y(_0049_)
  );
  NOR _0568_ (
    .A(contador_BC[12]),
    .B(contador_BC[11]),
    .Y(_0050_)
  );
  NAND _0569_ (
    .A(_0050_),
    .B(_0049_),
    .Y(_0051_)
  );
  NOR _0570_ (
    .A(_0051_),
    .B(_0048_),
    .Y(_0052_)
  );
  NAND _0571_ (
    .A(_0052_),
    .B(_0045_),
    .Y(_0053_)
  );
  NOR _0572_ (
    .A(_0053_),
    .B(_0038_),
    .Y(_0054_)
  );
  NOT _0573_ (
    .A(_0054_),
    .Y(_0055_)
  );
  NOR _0574_ (
    .A(_0055_),
    .B(contador_BC[2]),
    .Y(_0056_)
  );
  NOR _0575_ (
    .A(_0056_),
    .B(contador_BC[31]),
    .Y(_0057_)
  );
  NOR _0576_ (
    .A(_0057_),
    .B(_0023_),
    .Y(_0058_)
  );
  NOR _0577_ (
    .A(_0058_),
    .B(_0007_),
    .Y(_0059_)
  );
  NOR _0578_ (
    .A(contador[2]),
    .B(contador[1]),
    .Y(_0060_)
  );
  NAND _0579_ (
    .A(_0060_),
    .B(contador[0]),
    .Y(_0061_)
  );
  NOT _0580_ (
    .A(contador[9]),
    .Y(_0062_)
  );
  NOR _0581_ (
    .A(contador[10]),
    .B(contador[7]),
    .Y(_0063_)
  );
  NAND _0582_ (
    .A(_0063_),
    .B(_0062_),
    .Y(_0064_)
  );
  NOT _0583_ (
    .A(contador[4]),
    .Y(_0065_)
  );
  NOR _0584_ (
    .A(contador[6]),
    .B(contador[5]),
    .Y(_0066_)
  );
  NAND _0585_ (
    .A(_0066_),
    .B(_0065_),
    .Y(_0067_)
  );
  NOR _0586_ (
    .A(_0067_),
    .B(_0064_),
    .Y(_0068_)
  );
  NOT _0587_ (
    .A(contador[13]),
    .Y(_0069_)
  );
  NOT _0588_ (
    .A(contador[14]),
    .Y(_0070_)
  );
  NAND _0589_ (
    .A(_0070_),
    .B(_0069_),
    .Y(_0071_)
  );
  NOR _0590_ (
    .A(_0071_),
    .B(contador[12]),
    .Y(_0072_)
  );
  NAND _0591_ (
    .A(_0072_),
    .B(_0068_),
    .Y(_0073_)
  );
  NOT _0592_ (
    .A(contador[3]),
    .Y(_0074_)
  );
  NOT _0593_ (
    .A(contador[8]),
    .Y(_0075_)
  );
  NOT _0594_ (
    .A(contador[11]),
    .Y(_0076_)
  );
  NAND _0595_ (
    .A(_0076_),
    .B(_0075_),
    .Y(_0077_)
  );
  NOR _0596_ (
    .A(_0077_),
    .B(contador[15]),
    .Y(_0078_)
  );
  NAND _0597_ (
    .A(_0078_),
    .B(_0074_),
    .Y(_0079_)
  );
  NOR _0598_ (
    .A(_0079_),
    .B(_0073_),
    .Y(_0080_)
  );
  NOR _0599_ (
    .A(contador[26]),
    .B(contador[25]),
    .Y(_0081_)
  );
  NOT _0600_ (
    .A(contador[30]),
    .Y(_0082_)
  );
  NOT _0601_ (
    .A(contador[31]),
    .Y(_0083_)
  );
  NAND _0602_ (
    .A(_0083_),
    .B(_0082_),
    .Y(_0084_)
  );
  NOT _0603_ (
    .A(contador[27]),
    .Y(_0085_)
  );
  NOT _0604_ (
    .A(contador[24]),
    .Y(_0086_)
  );
  NOT _0605_ (
    .A(contador[28]),
    .Y(_0087_)
  );
  NAND _0606_ (
    .A(_0087_),
    .B(_0086_),
    .Y(_0088_)
  );
  NOR _0607_ (
    .A(_0088_),
    .B(contador[29]),
    .Y(_0089_)
  );
  NAND _0608_ (
    .A(_0089_),
    .B(_0085_),
    .Y(_0090_)
  );
  NOR _0609_ (
    .A(_0090_),
    .B(_0084_),
    .Y(_0091_)
  );
  NAND _0610_ (
    .A(_0091_),
    .B(_0081_),
    .Y(_0092_)
  );
  NOR _0611_ (
    .A(contador[22]),
    .B(contador[21]),
    .Y(_0093_)
  );
  NOR _0612_ (
    .A(contador[23]),
    .B(contador[20]),
    .Y(_0094_)
  );
  NAND _0613_ (
    .A(_0094_),
    .B(_0093_),
    .Y(_0095_)
  );
  NOR _0614_ (
    .A(contador[18]),
    .B(contador[17]),
    .Y(_0096_)
  );
  NOR _0615_ (
    .A(contador[19]),
    .B(contador[16]),
    .Y(_0097_)
  );
  NAND _0616_ (
    .A(_0097_),
    .B(_0096_),
    .Y(_0098_)
  );
  NOR _0617_ (
    .A(_0098_),
    .B(_0095_),
    .Y(_0099_)
  );
  NOT _0618_ (
    .A(_0099_),
    .Y(_0100_)
  );
  NOR _0619_ (
    .A(_0100_),
    .B(_0092_),
    .Y(_0101_)
  );
  NAND _0620_ (
    .A(_0101_),
    .B(_0080_),
    .Y(_0102_)
  );
  NOR _0621_ (
    .A(_0102_),
    .B(_0061_),
    .Y(_0103_)
  );
  NOT _0622_ (
    .A(_0103_),
    .Y(_0104_)
  );
  NOT _0623_ (
    .A(contador_BC[2]),
    .Y(_0105_)
  );
  NOR _0624_ (
    .A(contador_BC[1]),
    .B(contador_BC[0]),
    .Y(_0106_)
  );
  NOT _0625_ (
    .A(_0106_),
    .Y(_0107_)
  );
  NOR _0626_ (
    .A(_0107_),
    .B(_0105_),
    .Y(_0108_)
  );
  NAND _0627_ (
    .A(_0108_),
    .B(_0054_),
    .Y(_0109_)
  );
  NOR _0628_ (
    .A(_0109_),
    .B(_0104_),
    .Y(_0110_)
  );
  NOT _0629_ (
    .A(_0110_),
    .Y(_0111_)
  );
  NOR _0630_ (
    .A(_0111_),
    .B(_0022_),
    .Y(_0112_)
  );
  NOR _0631_ (
    .A(_0112_),
    .B(data_serial_paralelosintetizadosintetizadosintetizadosintetizadosintetizadoTX[7]),
    .Y(_0113_)
  );
  NOR _0632_ (
    .A(_0111_),
    .B(buffer[7]),
    .Y(_0114_)
  );
  NOR _0633_ (
    .A(_0114_),
    .B(_0113_),
    .Y(_0115_)
  );
  NAND _0634_ (
    .A(_0115_),
    .B(_0059_),
    .Y(_0116_)
  );
  NAND _0635_ (
    .A(_0116_),
    .B(_0008_),
    .Y(_0006_[7])
  );
  NOT _0636_ (
    .A(_0059_),
    .Y(_0117_)
  );
  NOT _0637_ (
    .A(data_serial_paralelosintetizadosintetizadosintetizadosintetizadosintetizadoTX[0]),
    .Y(_0118_)
  );
  NOR _0638_ (
    .A(_0112_),
    .B(_0118_),
    .Y(_0119_)
  );
  NOT _0639_ (
    .A(buffer[0]),
    .Y(_0120_)
  );
  NOR _0640_ (
    .A(_0111_),
    .B(_0120_),
    .Y(_0121_)
  );
  NOR _0641_ (
    .A(_0121_),
    .B(_0119_),
    .Y(_0122_)
  );
  NOR _0642_ (
    .A(_0122_),
    .B(_0117_),
    .Y(_0006_[0])
  );
  NOT _0643_ (
    .A(data_serial_paralelosintetizadosintetizadosintetizadosintetizadosintetizadoTX[1]),
    .Y(_0123_)
  );
  NOR _0644_ (
    .A(_0112_),
    .B(_0123_),
    .Y(_0124_)
  );
  NOT _0645_ (
    .A(buffer[1]),
    .Y(_0125_)
  );
  NOR _0646_ (
    .A(_0111_),
    .B(_0125_),
    .Y(_0126_)
  );
  NOR _0647_ (
    .A(_0126_),
    .B(_0124_),
    .Y(_0127_)
  );
  NOR _0648_ (
    .A(_0127_),
    .B(_0117_),
    .Y(_0006_[1])
  );
  NOR _0649_ (
    .A(_0112_),
    .B(data_serial_paralelosintetizadosintetizadosintetizadosintetizadosintetizadoTX[2]),
    .Y(_0128_)
  );
  NAND _0650_ (
    .A(_0112_),
    .B(_0009_),
    .Y(_0129_)
  );
  NAND _0651_ (
    .A(_0129_),
    .B(_0059_),
    .Y(_0130_)
  );
  NOR _0652_ (
    .A(_0130_),
    .B(_0128_),
    .Y(_0006_[2])
  );
  NOR _0653_ (
    .A(_0112_),
    .B(data_serial_paralelosintetizadosintetizadosintetizadosintetizadosintetizadoTX[3]),
    .Y(_0131_)
  );
  NAND _0654_ (
    .A(_0112_),
    .B(_0010_),
    .Y(_0132_)
  );
  NAND _0655_ (
    .A(_0132_),
    .B(_0059_),
    .Y(_0133_)
  );
  NOR _0656_ (
    .A(_0133_),
    .B(_0131_),
    .Y(_0006_[3])
  );
  NOR _0657_ (
    .A(_0112_),
    .B(data_serial_paralelosintetizadosintetizadosintetizadosintetizadosintetizadoTX[4]),
    .Y(_0134_)
  );
  NAND _0658_ (
    .A(_0112_),
    .B(_0012_),
    .Y(_0135_)
  );
  NAND _0659_ (
    .A(_0135_),
    .B(_0059_),
    .Y(_0136_)
  );
  NOR _0660_ (
    .A(_0136_),
    .B(_0134_),
    .Y(_0006_[4])
  );
  NOR _0661_ (
    .A(_0112_),
    .B(data_serial_paralelosintetizadosintetizadosintetizadosintetizadosintetizadoTX[5]),
    .Y(_0137_)
  );
  NAND _0662_ (
    .A(_0112_),
    .B(_0013_),
    .Y(_0138_)
  );
  NAND _0663_ (
    .A(_0138_),
    .B(_0059_),
    .Y(_0139_)
  );
  NOR _0664_ (
    .A(_0139_),
    .B(_0137_),
    .Y(_0006_[5])
  );
  NOT _0665_ (
    .A(data_serial_paralelosintetizadosintetizadosintetizadosintetizadosintetizadoTX[6]),
    .Y(_0140_)
  );
  NOR _0666_ (
    .A(_0112_),
    .B(_0140_),
    .Y(_0141_)
  );
  NOR _0667_ (
    .A(_0111_),
    .B(_0018_),
    .Y(_0142_)
  );
  NOR _0668_ (
    .A(_0142_),
    .B(_0141_),
    .Y(_0143_)
  );
  NOR _0669_ (
    .A(_0143_),
    .B(_0117_),
    .Y(_0006_[6])
  );
  NOT _0670_ (
    .A(contador[1]),
    .Y(_0144_)
  );
  NOT _0671_ (
    .A(contador[0]),
    .Y(_0145_)
  );
  NOR _0672_ (
    .A(_0145_),
    .B(_0144_),
    .Y(_0146_)
  );
  NAND _0673_ (
    .A(_0146_),
    .B(contador[2]),
    .Y(_0147_)
  );
  NOR _0674_ (
    .A(_0147_),
    .B(_0102_),
    .Y(_0148_)
  );
  NOR _0675_ (
    .A(_0148_),
    .B(_0007_),
    .Y(_0149_)
  );
  NOT _0676_ (
    .A(_0149_),
    .Y(_0150_)
  );
  NOR _0677_ (
    .A(_0150_),
    .B(contador[0]),
    .Y(_0004_[0])
  );
  NAND _0678_ (
    .A(contador[0]),
    .B(contador[1]),
    .Y(_0151_)
  );
  NAND _0679_ (
    .A(_0145_),
    .B(_0144_),
    .Y(_0152_)
  );
  NAND _0680_ (
    .A(_0152_),
    .B(_0151_),
    .Y(_0153_)
  );
  NOR _0681_ (
    .A(_0153_),
    .B(_0150_),
    .Y(_0004_[1])
  );
  NOT _0682_ (
    .A(contador[2]),
    .Y(_0154_)
  );
  NOR _0683_ (
    .A(_0151_),
    .B(_0154_),
    .Y(_0155_)
  );
  NAND _0684_ (
    .A(_0151_),
    .B(_0154_),
    .Y(_0156_)
  );
  NAND _0685_ (
    .A(_0156_),
    .B(reset),
    .Y(_0157_)
  );
  NOR _0686_ (
    .A(_0157_),
    .B(_0155_),
    .Y(_0004_[2])
  );
  NAND _0687_ (
    .A(_0155_),
    .B(contador[3]),
    .Y(_0158_)
  );
  NAND _0688_ (
    .A(_0147_),
    .B(_0074_),
    .Y(_0159_)
  );
  NAND _0689_ (
    .A(_0159_),
    .B(_0158_),
    .Y(_0160_)
  );
  NOR _0690_ (
    .A(_0160_),
    .B(_0150_),
    .Y(_0004_[3])
  );
  NAND _0691_ (
    .A(_0158_),
    .B(_0065_),
    .Y(_0161_)
  );
  NOR _0692_ (
    .A(_0147_),
    .B(_0074_),
    .Y(_0162_)
  );
  NAND _0693_ (
    .A(_0162_),
    .B(contador[4]),
    .Y(_0163_)
  );
  NAND _0694_ (
    .A(_0163_),
    .B(_0161_),
    .Y(_0164_)
  );
  NOR _0695_ (
    .A(_0164_),
    .B(_0150_),
    .Y(_0004_[4])
  );
  NOT _0696_ (
    .A(contador[5]),
    .Y(_0165_)
  );
  NAND _0697_ (
    .A(_0163_),
    .B(_0165_),
    .Y(_0166_)
  );
  NOR _0698_ (
    .A(_0158_),
    .B(_0065_),
    .Y(_0167_)
  );
  NAND _0699_ (
    .A(_0167_),
    .B(contador[5]),
    .Y(_0168_)
  );
  NAND _0700_ (
    .A(_0168_),
    .B(_0166_),
    .Y(_0169_)
  );
  NOR _0701_ (
    .A(_0169_),
    .B(_0150_),
    .Y(_0004_[5])
  );
  NOT _0702_ (
    .A(contador[6]),
    .Y(_0170_)
  );
  NAND _0703_ (
    .A(_0168_),
    .B(_0170_),
    .Y(_0171_)
  );
  NOR _0704_ (
    .A(_0163_),
    .B(_0165_),
    .Y(_0172_)
  );
  NAND _0705_ (
    .A(_0172_),
    .B(contador[6]),
    .Y(_0173_)
  );
  NAND _0706_ (
    .A(_0173_),
    .B(_0171_),
    .Y(_0174_)
  );
  NOR _0707_ (
    .A(_0174_),
    .B(_0150_),
    .Y(_0004_[6])
  );
  NOT _0708_ (
    .A(contador[7]),
    .Y(_0175_)
  );
  NOR _0709_ (
    .A(_0173_),
    .B(_0175_),
    .Y(_0176_)
  );
  NAND _0710_ (
    .A(_0173_),
    .B(_0175_),
    .Y(_0177_)
  );
  NAND _0711_ (
    .A(_0177_),
    .B(_0149_),
    .Y(_0178_)
  );
  NOR _0712_ (
    .A(_0178_),
    .B(_0176_),
    .Y(_0004_[7])
  );
  NOR _0713_ (
    .A(_0168_),
    .B(_0170_),
    .Y(_0179_)
  );
  NAND _0714_ (
    .A(_0179_),
    .B(contador[7]),
    .Y(_0180_)
  );
  NOR _0715_ (
    .A(_0180_),
    .B(_0075_),
    .Y(_0181_)
  );
  NAND _0716_ (
    .A(_0180_),
    .B(_0075_),
    .Y(_0182_)
  );
  NAND _0717_ (
    .A(_0182_),
    .B(_0149_),
    .Y(_0183_)
  );
  NOR _0718_ (
    .A(_0183_),
    .B(_0181_),
    .Y(_0004_[8])
  );
  NAND _0719_ (
    .A(_0176_),
    .B(contador[8]),
    .Y(_0184_)
  );
  NOR _0720_ (
    .A(_0184_),
    .B(_0062_),
    .Y(_0185_)
  );
  NAND _0721_ (
    .A(_0184_),
    .B(_0062_),
    .Y(_0186_)
  );
  NAND _0722_ (
    .A(_0186_),
    .B(_0149_),
    .Y(_0187_)
  );
  NOR _0723_ (
    .A(_0187_),
    .B(_0185_),
    .Y(_0004_[9])
  );
  NOT _0724_ (
    .A(contador[10]),
    .Y(_0188_)
  );
  NAND _0725_ (
    .A(_0181_),
    .B(contador[9]),
    .Y(_0189_)
  );
  NOR _0726_ (
    .A(_0189_),
    .B(_0188_),
    .Y(_0190_)
  );
  NAND _0727_ (
    .A(_0189_),
    .B(_0188_),
    .Y(_0191_)
  );
  NAND _0728_ (
    .A(_0191_),
    .B(_0149_),
    .Y(_0192_)
  );
  NOR _0729_ (
    .A(_0192_),
    .B(_0190_),
    .Y(_0004_[10])
  );
  NAND _0730_ (
    .A(_0185_),
    .B(contador[10]),
    .Y(_0193_)
  );
  NOR _0731_ (
    .A(_0193_),
    .B(_0076_),
    .Y(_0194_)
  );
  NAND _0732_ (
    .A(_0193_),
    .B(_0076_),
    .Y(_0195_)
  );
  NAND _0733_ (
    .A(_0195_),
    .B(_0149_),
    .Y(_0196_)
  );
  NOR _0734_ (
    .A(_0196_),
    .B(_0194_),
    .Y(_0004_[11])
  );
  NOT _0735_ (
    .A(contador[12]),
    .Y(_0197_)
  );
  NAND _0736_ (
    .A(_0190_),
    .B(contador[11]),
    .Y(_0198_)
  );
  NOR _0737_ (
    .A(_0198_),
    .B(_0197_),
    .Y(_0199_)
  );
  NAND _0738_ (
    .A(_0198_),
    .B(_0197_),
    .Y(_0200_)
  );
  NAND _0739_ (
    .A(_0200_),
    .B(_0149_),
    .Y(_0201_)
  );
  NOR _0740_ (
    .A(_0201_),
    .B(_0199_),
    .Y(_0004_[12])
  );
  NAND _0741_ (
    .A(_0194_),
    .B(contador[12]),
    .Y(_0202_)
  );
  NOR _0742_ (
    .A(_0202_),
    .B(_0069_),
    .Y(_0203_)
  );
  NAND _0743_ (
    .A(_0202_),
    .B(_0069_),
    .Y(_0204_)
  );
  NAND _0744_ (
    .A(_0204_),
    .B(_0149_),
    .Y(_0205_)
  );
  NOR _0745_ (
    .A(_0205_),
    .B(_0203_),
    .Y(_0004_[13])
  );
  NAND _0746_ (
    .A(_0199_),
    .B(contador[13]),
    .Y(_0206_)
  );
  NOR _0747_ (
    .A(_0206_),
    .B(_0070_),
    .Y(_0207_)
  );
  NAND _0748_ (
    .A(_0206_),
    .B(_0070_),
    .Y(_0208_)
  );
  NAND _0749_ (
    .A(_0208_),
    .B(_0149_),
    .Y(_0209_)
  );
  NOR _0750_ (
    .A(_0209_),
    .B(_0207_),
    .Y(_0004_[14])
  );
  NOT _0751_ (
    .A(contador[15]),
    .Y(_0210_)
  );
  NAND _0752_ (
    .A(_0203_),
    .B(contador[14]),
    .Y(_0211_)
  );
  NOR _0753_ (
    .A(_0211_),
    .B(_0210_),
    .Y(_0212_)
  );
  NAND _0754_ (
    .A(_0211_),
    .B(_0210_),
    .Y(_0213_)
  );
  NAND _0755_ (
    .A(_0213_),
    .B(_0149_),
    .Y(_0214_)
  );
  NOR _0756_ (
    .A(_0214_),
    .B(_0212_),
    .Y(_0004_[15])
  );
  NOT _0757_ (
    .A(contador[16]),
    .Y(_0215_)
  );
  NAND _0758_ (
    .A(_0207_),
    .B(contador[15]),
    .Y(_0216_)
  );
  NOR _0759_ (
    .A(_0216_),
    .B(_0215_),
    .Y(_0217_)
  );
  NAND _0760_ (
    .A(_0216_),
    .B(_0215_),
    .Y(_0218_)
  );
  NAND _0761_ (
    .A(_0218_),
    .B(_0149_),
    .Y(_0219_)
  );
  NOR _0762_ (
    .A(_0219_),
    .B(_0217_),
    .Y(_0004_[16])
  );
  NOT _0763_ (
    .A(contador[17]),
    .Y(_0220_)
  );
  NAND _0764_ (
    .A(_0212_),
    .B(contador[16]),
    .Y(_0221_)
  );
  NOR _0765_ (
    .A(_0221_),
    .B(_0220_),
    .Y(_0222_)
  );
  NAND _0766_ (
    .A(_0221_),
    .B(_0220_),
    .Y(_0223_)
  );
  NAND _0767_ (
    .A(_0223_),
    .B(_0149_),
    .Y(_0224_)
  );
  NOR _0768_ (
    .A(_0224_),
    .B(_0222_),
    .Y(_0004_[17])
  );
  NOT _0769_ (
    .A(contador[18]),
    .Y(_0225_)
  );
  NAND _0770_ (
    .A(_0217_),
    .B(contador[17]),
    .Y(_0226_)
  );
  NOR _0771_ (
    .A(_0226_),
    .B(_0225_),
    .Y(_0227_)
  );
  NAND _0772_ (
    .A(_0226_),
    .B(_0225_),
    .Y(_0228_)
  );
  NAND _0773_ (
    .A(_0228_),
    .B(_0149_),
    .Y(_0229_)
  );
  NOR _0774_ (
    .A(_0229_),
    .B(_0227_),
    .Y(_0004_[18])
  );
  NOT _0775_ (
    .A(contador[19]),
    .Y(_0230_)
  );
  NAND _0776_ (
    .A(_0222_),
    .B(contador[18]),
    .Y(_0231_)
  );
  NOR _0777_ (
    .A(_0231_),
    .B(_0230_),
    .Y(_0232_)
  );
  NAND _0778_ (
    .A(_0231_),
    .B(_0230_),
    .Y(_0233_)
  );
  NAND _0779_ (
    .A(_0233_),
    .B(_0149_),
    .Y(_0234_)
  );
  NOR _0780_ (
    .A(_0234_),
    .B(_0232_),
    .Y(_0004_[19])
  );
  NOT _0781_ (
    .A(contador[20]),
    .Y(_0235_)
  );
  NAND _0782_ (
    .A(_0227_),
    .B(contador[19]),
    .Y(_0236_)
  );
  NOR _0783_ (
    .A(_0236_),
    .B(_0235_),
    .Y(_0237_)
  );
  NAND _0784_ (
    .A(_0236_),
    .B(_0235_),
    .Y(_0238_)
  );
  NAND _0785_ (
    .A(_0238_),
    .B(_0149_),
    .Y(_0239_)
  );
  NOR _0786_ (
    .A(_0239_),
    .B(_0237_),
    .Y(_0004_[20])
  );
  NOT _0787_ (
    .A(contador[21]),
    .Y(_0240_)
  );
  NAND _0788_ (
    .A(_0232_),
    .B(contador[20]),
    .Y(_0241_)
  );
  NOR _0789_ (
    .A(_0241_),
    .B(_0240_),
    .Y(_0242_)
  );
  NAND _0790_ (
    .A(_0241_),
    .B(_0240_),
    .Y(_0243_)
  );
  NAND _0791_ (
    .A(_0243_),
    .B(_0149_),
    .Y(_0244_)
  );
  NOR _0792_ (
    .A(_0244_),
    .B(_0242_),
    .Y(_0004_[21])
  );
  NOT _0793_ (
    .A(contador[22]),
    .Y(_0245_)
  );
  NAND _0794_ (
    .A(_0237_),
    .B(contador[21]),
    .Y(_0246_)
  );
  NOR _0795_ (
    .A(_0246_),
    .B(_0245_),
    .Y(_0247_)
  );
  NAND _0796_ (
    .A(_0246_),
    .B(_0245_),
    .Y(_0248_)
  );
  NAND _0797_ (
    .A(_0248_),
    .B(_0149_),
    .Y(_0249_)
  );
  NOR _0798_ (
    .A(_0249_),
    .B(_0247_),
    .Y(_0004_[22])
  );
  NOT _0799_ (
    .A(contador[23]),
    .Y(_0250_)
  );
  NAND _0800_ (
    .A(_0242_),
    .B(contador[22]),
    .Y(_0251_)
  );
  NOR _0801_ (
    .A(_0251_),
    .B(_0250_),
    .Y(_0252_)
  );
  NAND _0802_ (
    .A(_0251_),
    .B(_0250_),
    .Y(_0253_)
  );
  NAND _0803_ (
    .A(_0253_),
    .B(_0149_),
    .Y(_0254_)
  );
  NOR _0804_ (
    .A(_0254_),
    .B(_0252_),
    .Y(_0004_[23])
  );
  NAND _0805_ (
    .A(_0247_),
    .B(contador[23]),
    .Y(_0255_)
  );
  NOR _0806_ (
    .A(_0255_),
    .B(_0086_),
    .Y(_0256_)
  );
  NAND _0807_ (
    .A(_0255_),
    .B(_0086_),
    .Y(_0257_)
  );
  NAND _0808_ (
    .A(_0257_),
    .B(_0149_),
    .Y(_0258_)
  );
  NOR _0809_ (
    .A(_0258_),
    .B(_0256_),
    .Y(_0004_[24])
  );
  NOT _0810_ (
    .A(contador[25]),
    .Y(_0259_)
  );
  NAND _0811_ (
    .A(_0252_),
    .B(contador[24]),
    .Y(_0260_)
  );
  NOR _0812_ (
    .A(_0260_),
    .B(_0259_),
    .Y(_0261_)
  );
  NAND _0813_ (
    .A(_0260_),
    .B(_0259_),
    .Y(_0262_)
  );
  NAND _0814_ (
    .A(_0262_),
    .B(_0149_),
    .Y(_0263_)
  );
  NOR _0815_ (
    .A(_0263_),
    .B(_0261_),
    .Y(_0004_[25])
  );
  NOT _0816_ (
    .A(contador[26]),
    .Y(_0264_)
  );
  NAND _0817_ (
    .A(_0256_),
    .B(contador[25]),
    .Y(_0265_)
  );
  NOR _0818_ (
    .A(_0265_),
    .B(_0264_),
    .Y(_0266_)
  );
  NAND _0819_ (
    .A(_0265_),
    .B(_0264_),
    .Y(_0267_)
  );
  NAND _0820_ (
    .A(_0267_),
    .B(_0149_),
    .Y(_0268_)
  );
  NOR _0821_ (
    .A(_0268_),
    .B(_0266_),
    .Y(_0004_[26])
  );
  NAND _0822_ (
    .A(_0261_),
    .B(contador[26]),
    .Y(_0269_)
  );
  NOR _0823_ (
    .A(_0269_),
    .B(_0085_),
    .Y(_0270_)
  );
  NAND _0824_ (
    .A(_0269_),
    .B(_0085_),
    .Y(_0271_)
  );
  NAND _0825_ (
    .A(_0271_),
    .B(_0149_),
    .Y(_0272_)
  );
  NOR _0826_ (
    .A(_0272_),
    .B(_0270_),
    .Y(_0004_[27])
  );
  NAND _0827_ (
    .A(_0266_),
    .B(contador[27]),
    .Y(_0273_)
  );
  NOR _0828_ (
    .A(_0273_),
    .B(_0087_),
    .Y(_0274_)
  );
  NAND _0829_ (
    .A(_0273_),
    .B(_0087_),
    .Y(_0275_)
  );
  NAND _0830_ (
    .A(_0275_),
    .B(_0149_),
    .Y(_0276_)
  );
  NOR _0831_ (
    .A(_0276_),
    .B(_0274_),
    .Y(_0004_[28])
  );
  NOT _0832_ (
    .A(contador[29]),
    .Y(_0277_)
  );
  NAND _0833_ (
    .A(_0270_),
    .B(contador[28]),
    .Y(_0278_)
  );
  NOR _0834_ (
    .A(_0278_),
    .B(_0277_),
    .Y(_0279_)
  );
  NAND _0835_ (
    .A(_0278_),
    .B(_0277_),
    .Y(_0280_)
  );
  NAND _0836_ (
    .A(_0280_),
    .B(_0149_),
    .Y(_0281_)
  );
  NOR _0837_ (
    .A(_0281_),
    .B(_0279_),
    .Y(_0004_[29])
  );
  NAND _0838_ (
    .A(_0274_),
    .B(contador[29]),
    .Y(_0282_)
  );
  NOR _0839_ (
    .A(_0282_),
    .B(_0082_),
    .Y(_0283_)
  );
  NAND _0840_ (
    .A(_0282_),
    .B(_0082_),
    .Y(_0284_)
  );
  NAND _0841_ (
    .A(_0284_),
    .B(_0149_),
    .Y(_0285_)
  );
  NOR _0842_ (
    .A(_0285_),
    .B(_0283_),
    .Y(_0004_[30])
  );
  NOR _0843_ (
    .A(_0283_),
    .B(_0083_),
    .Y(_0286_)
  );
  NAND _0844_ (
    .A(_0279_),
    .B(contador[30]),
    .Y(_0287_)
  );
  NOR _0845_ (
    .A(_0287_),
    .B(contador[31]),
    .Y(_0288_)
  );
  NOR _0846_ (
    .A(_0288_),
    .B(_0286_),
    .Y(_0289_)
  );
  NOR _0847_ (
    .A(_0289_),
    .B(_0150_),
    .Y(_0004_[31])
  );
  NOR _0848_ (
    .A(_0104_),
    .B(_0007_),
    .Y(_0290_)
  );
  NOT _0849_ (
    .A(_0290_),
    .Y(_0291_)
  );
  NAND _0850_ (
    .A(_0291_),
    .B(buffer_pasado[0]),
    .Y(_0292_)
  );
  NAND _0851_ (
    .A(_0290_),
    .B(buffer[0]),
    .Y(_0293_)
  );
  NAND _0852_ (
    .A(_0293_),
    .B(_0292_),
    .Y(_0003_[0])
  );
  NAND _0853_ (
    .A(_0291_),
    .B(buffer_pasado[1]),
    .Y(_0294_)
  );
  NAND _0854_ (
    .A(_0290_),
    .B(buffer[1]),
    .Y(_0295_)
  );
  NAND _0855_ (
    .A(_0295_),
    .B(_0294_),
    .Y(_0003_[1])
  );
  NAND _0856_ (
    .A(_0291_),
    .B(buffer_pasado[2]),
    .Y(_0296_)
  );
  NAND _0857_ (
    .A(_0290_),
    .B(buffer[2]),
    .Y(_0297_)
  );
  NAND _0858_ (
    .A(_0297_),
    .B(_0296_),
    .Y(_0003_[2])
  );
  NAND _0859_ (
    .A(_0291_),
    .B(buffer_pasado[3]),
    .Y(_0298_)
  );
  NAND _0860_ (
    .A(_0290_),
    .B(buffer[3]),
    .Y(_0299_)
  );
  NAND _0861_ (
    .A(_0299_),
    .B(_0298_),
    .Y(_0003_[3])
  );
  NAND _0862_ (
    .A(_0291_),
    .B(buffer_pasado[4]),
    .Y(_0300_)
  );
  NAND _0863_ (
    .A(_0290_),
    .B(buffer[4]),
    .Y(_0301_)
  );
  NAND _0864_ (
    .A(_0301_),
    .B(_0300_),
    .Y(_0003_[4])
  );
  NAND _0865_ (
    .A(_0291_),
    .B(buffer_pasado[5]),
    .Y(_0302_)
  );
  NAND _0866_ (
    .A(_0290_),
    .B(buffer[5]),
    .Y(_0303_)
  );
  NAND _0867_ (
    .A(_0303_),
    .B(_0302_),
    .Y(_0003_[5])
  );
  NAND _0868_ (
    .A(_0291_),
    .B(buffer_pasado[6]),
    .Y(_0304_)
  );
  NAND _0869_ (
    .A(_0290_),
    .B(buffer[6]),
    .Y(_0305_)
  );
  NAND _0870_ (
    .A(_0305_),
    .B(_0304_),
    .Y(_0003_[6])
  );
  NAND _0871_ (
    .A(_0290_),
    .B(buffer[7]),
    .Y(_0306_)
  );
  NAND _0872_ (
    .A(_0291_),
    .B(buffer_pasado[7]),
    .Y(_0307_)
  );
  NAND _0873_ (
    .A(_0307_),
    .B(_0306_),
    .Y(_0003_[7])
  );
  NOT _0874_ (
    .A(IDLin),
    .Y(_0308_)
  );
  NOR _0875_ (
    .A(_0308_),
    .B(_0007_),
    .Y(_0002_[0])
  );
  NOR _0876_ (
    .A(_0007_),
    .B(_0120_),
    .Y(_0002_[1])
  );
  NOR _0877_ (
    .A(_0007_),
    .B(_0125_),
    .Y(_0002_[2])
  );
  NOR _0878_ (
    .A(_0009_),
    .B(_0007_),
    .Y(_0002_[3])
  );
  NOR _0879_ (
    .A(_0010_),
    .B(_0007_),
    .Y(_0002_[4])
  );
  NOR _0880_ (
    .A(_0012_),
    .B(_0007_),
    .Y(_0002_[5])
  );
  NOR _0881_ (
    .A(_0013_),
    .B(_0007_),
    .Y(_0002_[6])
  );
  NOR _0882_ (
    .A(_0007_),
    .B(_0018_),
    .Y(_0002_[7])
  );
  NOT _0883_ (
    .A(buffer_pasado[0]),
    .Y(_0309_)
  );
  NAND _0884_ (
    .A(buffer_pasado[2]),
    .B(_0309_),
    .Y(_0310_)
  );
  NAND _0885_ (
    .A(buffer_pasado[4]),
    .B(buffer_pasado[3]),
    .Y(_0311_)
  );
  NAND _0886_ (
    .A(buffer_pasado[7]),
    .B(buffer_pasado[5]),
    .Y(_0312_)
  );
  NOR _0887_ (
    .A(_0312_),
    .B(_0311_),
    .Y(_0313_)
  );
  NOR _0888_ (
    .A(buffer_pasado[6]),
    .B(buffer_pasado[1]),
    .Y(_0314_)
  );
  NAND _0889_ (
    .A(_0314_),
    .B(_0313_),
    .Y(_0315_)
  );
  NOR _0890_ (
    .A(_0315_),
    .B(_0310_),
    .Y(_0316_)
  );
  NOR _0891_ (
    .A(_0316_),
    .B(_0023_),
    .Y(_0317_)
  );
  NAND _0892_ (
    .A(_0317_),
    .B(_0110_),
    .Y(_0318_)
  );
  NOT _0893_ (
    .A(_0318_),
    .Y(_0319_)
  );
  NOR _0894_ (
    .A(_0319_),
    .B(_0058_),
    .Y(_0320_)
  );
  NOT _0895_ (
    .A(_0320_),
    .Y(_0321_)
  );
  NOT _0896_ (
    .A(IDLEOut),
    .Y(_0322_)
  );
  NOT _0897_ (
    .A(_0112_),
    .Y(_0323_)
  );
  NAND _0898_ (
    .A(_0323_),
    .B(_0322_),
    .Y(_0324_)
  );
  NAND _0899_ (
    .A(_0324_),
    .B(reset),
    .Y(_0325_)
  );
  NOR _0900_ (
    .A(_0325_),
    .B(_0321_),
    .Y(_0000_)
  );
  NOR _0901_ (
    .A(_0110_),
    .B(active_serial_paralelosintetizadosintetizadosintetizadosintetizadosintetizadoTX),
    .Y(_0326_)
  );
  NOR _0902_ (
    .A(_0326_),
    .B(_0007_),
    .Y(_0001_)
  );
  NOT _0903_ (
    .A(contador_BC[0]),
    .Y(_0327_)
  );
  NOR _0904_ (
    .A(_0320_),
    .B(_0327_),
    .Y(_0328_)
  );
  NOT _0905_ (
    .A(_0058_),
    .Y(_0329_)
  );
  NAND _0906_ (
    .A(_0329_),
    .B(_0327_),
    .Y(_0330_)
  );
  NAND _0907_ (
    .A(_0330_),
    .B(reset),
    .Y(_0331_)
  );
  NOR _0908_ (
    .A(_0331_),
    .B(_0328_),
    .Y(_0005_[0])
  );
  NOT _0909_ (
    .A(contador_BC[1]),
    .Y(_0332_)
  );
  NOR _0910_ (
    .A(_0321_),
    .B(_0332_),
    .Y(_0333_)
  );
  NOR _0911_ (
    .A(_0332_),
    .B(_0327_),
    .Y(_0334_)
  );
  NOT _0912_ (
    .A(_0334_),
    .Y(_0335_)
  );
  NAND _0913_ (
    .A(_0335_),
    .B(_0107_),
    .Y(_0336_)
  );
  NOR _0914_ (
    .A(_0336_),
    .B(_0329_),
    .Y(_0337_)
  );
  NOR _0915_ (
    .A(_0337_),
    .B(_0333_),
    .Y(_0338_)
  );
  NOR _0916_ (
    .A(_0338_),
    .B(_0007_),
    .Y(_0005_[1])
  );
  NOR _0917_ (
    .A(_0335_),
    .B(_0329_),
    .Y(_0339_)
  );
  NOR _0918_ (
    .A(_0339_),
    .B(contador_BC[2]),
    .Y(_0340_)
  );
  NOR _0919_ (
    .A(_0319_),
    .B(_0007_),
    .Y(_0341_)
  );
  NAND _0920_ (
    .A(_0339_),
    .B(contador_BC[2]),
    .Y(_0342_)
  );
  NAND _0921_ (
    .A(_0342_),
    .B(_0341_),
    .Y(_0343_)
  );
  NOR _0922_ (
    .A(_0343_),
    .B(_0340_),
    .Y(_0005_[2])
  );
  NAND _0923_ (
    .A(_0342_),
    .B(_0039_),
    .Y(_0344_)
  );
  NAND _0924_ (
    .A(_0344_),
    .B(reset),
    .Y(_0345_)
  );
  NOR _0925_ (
    .A(_0342_),
    .B(_0039_),
    .Y(_0346_)
  );
  NOR _0926_ (
    .A(_0346_),
    .B(_0345_),
    .Y(_0005_[3])
  );
  NOR _0927_ (
    .A(_0335_),
    .B(_0105_),
    .Y(_0347_)
  );
  NOT _0928_ (
    .A(_0347_),
    .Y(_0348_)
  );
  NOR _0929_ (
    .A(_0348_),
    .B(_0329_),
    .Y(_0349_)
  );
  NAND _0930_ (
    .A(_0349_),
    .B(contador_BC[3]),
    .Y(_0350_)
  );
  NAND _0931_ (
    .A(_0350_),
    .B(_0040_),
    .Y(_0351_)
  );
  NAND _0932_ (
    .A(_0351_),
    .B(reset),
    .Y(_0352_)
  );
  NOR _0933_ (
    .A(_0329_),
    .B(_0105_),
    .Y(_0353_)
  );
  NAND _0934_ (
    .A(_0353_),
    .B(_0334_),
    .Y(_0354_)
  );
  NOR _0935_ (
    .A(_0040_),
    .B(_0039_),
    .Y(_0355_)
  );
  NOT _0936_ (
    .A(_0355_),
    .Y(_0356_)
  );
  NOR _0937_ (
    .A(_0356_),
    .B(_0354_),
    .Y(_0357_)
  );
  NOR _0938_ (
    .A(_0357_),
    .B(_0352_),
    .Y(_0005_[4])
  );
  NOT _0939_ (
    .A(contador_BC[5]),
    .Y(_0358_)
  );
  NOT _0940_ (
    .A(_0357_),
    .Y(_0359_)
  );
  NAND _0941_ (
    .A(_0359_),
    .B(_0358_),
    .Y(_0360_)
  );
  NAND _0942_ (
    .A(_0360_),
    .B(reset),
    .Y(_0361_)
  );
  NAND _0943_ (
    .A(_0357_),
    .B(contador_BC[5]),
    .Y(_0362_)
  );
  NOT _0944_ (
    .A(_0362_),
    .Y(_0363_)
  );
  NOR _0945_ (
    .A(_0363_),
    .B(_0361_),
    .Y(_0005_[5])
  );
  NOT _0946_ (
    .A(contador_BC[6]),
    .Y(_0364_)
  );
  NAND _0947_ (
    .A(_0362_),
    .B(_0364_),
    .Y(_0365_)
  );
  NAND _0948_ (
    .A(_0365_),
    .B(reset),
    .Y(_0366_)
  );
  NOR _0949_ (
    .A(_0362_),
    .B(_0364_),
    .Y(_0367_)
  );
  NOR _0950_ (
    .A(_0367_),
    .B(_0366_),
    .Y(_0005_[6])
  );
  NOT _0951_ (
    .A(contador_BC[7]),
    .Y(_0368_)
  );
  NOR _0952_ (
    .A(_0358_),
    .B(_0039_),
    .Y(_0369_)
  );
  NOR _0953_ (
    .A(_0364_),
    .B(_0040_),
    .Y(_0370_)
  );
  NAND _0954_ (
    .A(_0370_),
    .B(_0369_),
    .Y(_0371_)
  );
  NOT _0955_ (
    .A(_0371_),
    .Y(_0372_)
  );
  NAND _0956_ (
    .A(_0372_),
    .B(_0349_),
    .Y(_0373_)
  );
  NAND _0957_ (
    .A(_0373_),
    .B(_0368_),
    .Y(_0374_)
  );
  NAND _0958_ (
    .A(_0374_),
    .B(reset),
    .Y(_0375_)
  );
  NAND _0959_ (
    .A(_0367_),
    .B(contador_BC[7]),
    .Y(_0376_)
  );
  NOT _0960_ (
    .A(_0376_),
    .Y(_0377_)
  );
  NOR _0961_ (
    .A(_0377_),
    .B(_0375_),
    .Y(_0005_[7])
  );
  NOT _0962_ (
    .A(contador_BC[8]),
    .Y(_0378_)
  );
  NAND _0963_ (
    .A(_0376_),
    .B(_0378_),
    .Y(_0379_)
  );
  NAND _0964_ (
    .A(_0379_),
    .B(reset),
    .Y(_0380_)
  );
  NOR _0965_ (
    .A(_0378_),
    .B(_0368_),
    .Y(_0381_)
  );
  NOT _0966_ (
    .A(_0381_),
    .Y(_0382_)
  );
  NOR _0967_ (
    .A(_0382_),
    .B(_0373_),
    .Y(_0383_)
  );
  NOR _0968_ (
    .A(_0383_),
    .B(_0380_),
    .Y(_0005_[8])
  );
  NOT _0969_ (
    .A(contador_BC[9]),
    .Y(_0384_)
  );
  NOT _0970_ (
    .A(_0383_),
    .Y(_0385_)
  );
  NAND _0971_ (
    .A(_0385_),
    .B(_0384_),
    .Y(_0386_)
  );
  NAND _0972_ (
    .A(_0386_),
    .B(reset),
    .Y(_0387_)
  );
  NOR _0973_ (
    .A(_0376_),
    .B(_0378_),
    .Y(_0388_)
  );
  NAND _0974_ (
    .A(_0388_),
    .B(contador_BC[9]),
    .Y(_0389_)
  );
  NOT _0975_ (
    .A(_0389_),
    .Y(_0390_)
  );
  NOR _0976_ (
    .A(_0390_),
    .B(_0387_),
    .Y(_0005_[9])
  );
  NOT _0977_ (
    .A(contador_BC[10]),
    .Y(_0391_)
  );
  NAND _0978_ (
    .A(_0389_),
    .B(_0391_),
    .Y(_0392_)
  );
  NAND _0979_ (
    .A(_0392_),
    .B(reset),
    .Y(_0393_)
  );
  NOR _0980_ (
    .A(_0391_),
    .B(_0384_),
    .Y(_0394_)
  );
  NOT _0981_ (
    .A(_0394_),
    .Y(_0395_)
  );
  NOR _0982_ (
    .A(_0395_),
    .B(_0385_),
    .Y(_0396_)
  );
  NOR _0983_ (
    .A(_0396_),
    .B(_0393_),
    .Y(_0005_[10])
  );
  NOR _0984_ (
    .A(_0396_),
    .B(contador_BC[11]),
    .Y(_0397_)
  );
  NOR _0985_ (
    .A(_0389_),
    .B(_0391_),
    .Y(_0398_)
  );
  NAND _0986_ (
    .A(_0398_),
    .B(contador_BC[11]),
    .Y(_0399_)
  );
  NAND _0987_ (
    .A(_0399_),
    .B(reset),
    .Y(_0400_)
  );
  NOR _0988_ (
    .A(_0400_),
    .B(_0397_),
    .Y(_0005_[11])
  );
  NOT _0989_ (
    .A(contador_BC[12]),
    .Y(_0401_)
  );
  NOR _0990_ (
    .A(_0399_),
    .B(_0401_),
    .Y(_0402_)
  );
  NAND _0991_ (
    .A(_0399_),
    .B(_0401_),
    .Y(_0403_)
  );
  NAND _0992_ (
    .A(_0403_),
    .B(reset),
    .Y(_0404_)
  );
  NOR _0993_ (
    .A(_0404_),
    .B(_0402_),
    .Y(_0005_[12])
  );
  NOR _0994_ (
    .A(_0402_),
    .B(contador_BC[13]),
    .Y(_0405_)
  );
  NOT _0995_ (
    .A(contador_BC[13]),
    .Y(_0406_)
  );
  NOT _0996_ (
    .A(contador_BC[11]),
    .Y(_0407_)
  );
  NOR _0997_ (
    .A(_0401_),
    .B(_0407_),
    .Y(_0408_)
  );
  NOT _0998_ (
    .A(_0408_),
    .Y(_0409_)
  );
  NOR _0999_ (
    .A(_0409_),
    .B(_0406_),
    .Y(_0410_)
  );
  NAND _1000_ (
    .A(_0410_),
    .B(_0396_),
    .Y(_0411_)
  );
  NAND _1001_ (
    .A(_0411_),
    .B(reset),
    .Y(_0412_)
  );
  NOR _1002_ (
    .A(_0412_),
    .B(_0405_),
    .Y(_0005_[13])
  );
  NOT _1003_ (
    .A(contador_BC[14]),
    .Y(_0413_)
  );
  NAND _1004_ (
    .A(_0411_),
    .B(_0413_),
    .Y(_0414_)
  );
  NAND _1005_ (
    .A(_0414_),
    .B(reset),
    .Y(_0415_)
  );
  NOR _1006_ (
    .A(_0411_),
    .B(_0413_),
    .Y(_0416_)
  );
  NOR _1007_ (
    .A(_0416_),
    .B(_0415_),
    .Y(_0005_[14])
  );
  NOR _1008_ (
    .A(_0416_),
    .B(contador_BC[15]),
    .Y(_0417_)
  );
  NOR _1009_ (
    .A(_0371_),
    .B(_0348_),
    .Y(_0418_)
  );
  NOR _1010_ (
    .A(_0382_),
    .B(_0413_),
    .Y(_0419_)
  );
  NAND _1011_ (
    .A(_0419_),
    .B(_0418_),
    .Y(_0420_)
  );
  NAND _1012_ (
    .A(_0410_),
    .B(contador_BC[15]),
    .Y(_0421_)
  );
  NOR _1013_ (
    .A(_0421_),
    .B(_0395_),
    .Y(_0422_)
  );
  NOT _1014_ (
    .A(_0422_),
    .Y(_0423_)
  );
  NOR _1015_ (
    .A(_0423_),
    .B(_0420_),
    .Y(_0424_)
  );
  NAND _1016_ (
    .A(_0424_),
    .B(_0058_),
    .Y(_0425_)
  );
  NAND _1017_ (
    .A(_0425_),
    .B(reset),
    .Y(_0426_)
  );
  NOR _1018_ (
    .A(_0426_),
    .B(_0417_),
    .Y(_0005_[15])
  );
  NOR _1019_ (
    .A(_0413_),
    .B(_0406_),
    .Y(_0427_)
  );
  NOT _1020_ (
    .A(contador_BC[15]),
    .Y(_0428_)
  );
  NOR _1021_ (
    .A(_0356_),
    .B(_0428_),
    .Y(_0429_)
  );
  NAND _1022_ (
    .A(_0429_),
    .B(_0427_),
    .Y(_0430_)
  );
  NOR _1023_ (
    .A(_0364_),
    .B(_0358_),
    .Y(_0431_)
  );
  NAND _1024_ (
    .A(_0381_),
    .B(_0431_),
    .Y(_0432_)
  );
  NOR _1025_ (
    .A(_0409_),
    .B(_0395_),
    .Y(_0433_)
  );
  NOT _1026_ (
    .A(_0433_),
    .Y(_0434_)
  );
  NOR _1027_ (
    .A(_0434_),
    .B(_0432_),
    .Y(_0435_)
  );
  NOT _1028_ (
    .A(_0435_),
    .Y(_0436_)
  );
  NOR _1029_ (
    .A(_0436_),
    .B(_0430_),
    .Y(_0437_)
  );
  NOT _1030_ (
    .A(_0437_),
    .Y(_0438_)
  );
  NOR _1031_ (
    .A(_0438_),
    .B(_0342_),
    .Y(_0439_)
  );
  NOR _1032_ (
    .A(_0439_),
    .B(contador_BC[16]),
    .Y(_0440_)
  );
  NOT _1033_ (
    .A(contador_BC[16]),
    .Y(_0441_)
  );
  NOR _1034_ (
    .A(_0425_),
    .B(_0441_),
    .Y(_0442_)
  );
  NOT _1035_ (
    .A(_0442_),
    .Y(_0443_)
  );
  NAND _1036_ (
    .A(_0443_),
    .B(reset),
    .Y(_0444_)
  );
  NOR _1037_ (
    .A(_0444_),
    .B(_0440_),
    .Y(_0005_[16])
  );
  NOT _1038_ (
    .A(contador_BC[17]),
    .Y(_0445_)
  );
  NAND _1039_ (
    .A(_0443_),
    .B(_0445_),
    .Y(_0446_)
  );
  NAND _1040_ (
    .A(_0446_),
    .B(reset),
    .Y(_0447_)
  );
  NOR _1041_ (
    .A(_0443_),
    .B(_0445_),
    .Y(_0448_)
  );
  NOR _1042_ (
    .A(_0448_),
    .B(_0447_),
    .Y(_0005_[17])
  );
  NOT _1043_ (
    .A(contador_BC[18]),
    .Y(_0449_)
  );
  NOT _1044_ (
    .A(_0448_),
    .Y(_0450_)
  );
  NAND _1045_ (
    .A(_0450_),
    .B(_0449_),
    .Y(_0451_)
  );
  NAND _1046_ (
    .A(_0451_),
    .B(reset),
    .Y(_0452_)
  );
  NOR _1047_ (
    .A(_0450_),
    .B(_0449_),
    .Y(_0453_)
  );
  NOR _1048_ (
    .A(_0453_),
    .B(_0452_),
    .Y(_0005_[18])
  );
  NOR _1049_ (
    .A(_0453_),
    .B(contador_BC[19]),
    .Y(_0454_)
  );
  NAND _1050_ (
    .A(_0453_),
    .B(contador_BC[19]),
    .Y(_0455_)
  );
  NAND _1051_ (
    .A(_0455_),
    .B(reset),
    .Y(_0456_)
  );
  NOR _1052_ (
    .A(_0456_),
    .B(_0454_),
    .Y(_0005_[19])
  );
  NOT _1053_ (
    .A(contador_BC[20]),
    .Y(_0457_)
  );
  NAND _1054_ (
    .A(_0455_),
    .B(_0457_),
    .Y(_0458_)
  );
  NOT _1055_ (
    .A(_0455_),
    .Y(_0459_)
  );
  NAND _1056_ (
    .A(_0459_),
    .B(contador_BC[20]),
    .Y(_0460_)
  );
  NAND _1057_ (
    .A(_0460_),
    .B(_0458_),
    .Y(_0461_)
  );
  NOR _1058_ (
    .A(_0461_),
    .B(_0007_),
    .Y(_0005_[20])
  );
  NOT _1059_ (
    .A(contador_BC[21]),
    .Y(_0462_)
  );
  NAND _1060_ (
    .A(_0460_),
    .B(_0462_),
    .Y(_0463_)
  );
  NAND _1061_ (
    .A(_0463_),
    .B(reset),
    .Y(_0464_)
  );
  NOR _1062_ (
    .A(_0462_),
    .B(_0457_),
    .Y(_0465_)
  );
  NOT _1063_ (
    .A(_0465_),
    .Y(_0466_)
  );
  NOR _1064_ (
    .A(_0466_),
    .B(_0455_),
    .Y(_0467_)
  );
  NOR _1065_ (
    .A(_0467_),
    .B(_0464_),
    .Y(_0005_[21])
  );
  NOT _1066_ (
    .A(contador_BC[22]),
    .Y(_0468_)
  );
  NOT _1067_ (
    .A(_0467_),
    .Y(_0469_)
  );
  NAND _1068_ (
    .A(_0469_),
    .B(_0468_),
    .Y(_0470_)
  );
  NAND _1069_ (
    .A(_0470_),
    .B(reset),
    .Y(_0471_)
  );
  NOR _1070_ (
    .A(_0469_),
    .B(_0468_),
    .Y(_0472_)
  );
  NOR _1071_ (
    .A(_0472_),
    .B(_0471_),
    .Y(_0005_[22])
  );
  NOR _1072_ (
    .A(_0472_),
    .B(contador_BC[23]),
    .Y(_0473_)
  );
  NAND _1073_ (
    .A(_0472_),
    .B(contador_BC[23]),
    .Y(_0474_)
  );
  NAND _1074_ (
    .A(_0474_),
    .B(reset),
    .Y(_0475_)
  );
  NOR _1075_ (
    .A(_0475_),
    .B(_0473_),
    .Y(_0005_[23])
  );
  NOT _1076_ (
    .A(contador_BC[24]),
    .Y(_0476_)
  );
  NAND _1077_ (
    .A(_0474_),
    .B(_0476_),
    .Y(_0477_)
  );
  NAND _1078_ (
    .A(_0477_),
    .B(reset),
    .Y(_0478_)
  );
  NOR _1079_ (
    .A(_0474_),
    .B(_0476_),
    .Y(_0479_)
  );
  NOR _1080_ (
    .A(_0479_),
    .B(_0478_),
    .Y(_0005_[24])
  );
  NOT _1081_ (
    .A(contador_BC[25]),
    .Y(_0480_)
  );
  NOT _1082_ (
    .A(contador_BC[23]),
    .Y(_0481_)
  );
  NOT _1083_ (
    .A(contador_BC[19]),
    .Y(_0482_)
  );
  NAND _1084_ (
    .A(_0439_),
    .B(contador_BC[16]),
    .Y(_0483_)
  );
  NOR _1085_ (
    .A(_0483_),
    .B(_0445_),
    .Y(_0484_)
  );
  NAND _1086_ (
    .A(_0484_),
    .B(contador_BC[18]),
    .Y(_0485_)
  );
  NOR _1087_ (
    .A(_0485_),
    .B(_0482_),
    .Y(_0486_)
  );
  NAND _1088_ (
    .A(_0486_),
    .B(contador_BC[20]),
    .Y(_0487_)
  );
  NOR _1089_ (
    .A(_0487_),
    .B(_0462_),
    .Y(_0488_)
  );
  NAND _1090_ (
    .A(_0488_),
    .B(contador_BC[22]),
    .Y(_0489_)
  );
  NOR _1091_ (
    .A(_0489_),
    .B(_0481_),
    .Y(_0490_)
  );
  NAND _1092_ (
    .A(_0490_),
    .B(contador_BC[24]),
    .Y(_0491_)
  );
  NAND _1093_ (
    .A(_0491_),
    .B(_0480_),
    .Y(_0492_)
  );
  NAND _1094_ (
    .A(_0492_),
    .B(reset),
    .Y(_0493_)
  );
  NOR _1095_ (
    .A(_0491_),
    .B(_0480_),
    .Y(_0494_)
  );
  NOR _1096_ (
    .A(_0494_),
    .B(_0493_),
    .Y(_0005_[25])
  );
  NOR _1097_ (
    .A(_0494_),
    .B(contador_BC[26]),
    .Y(_0495_)
  );
  NOR _1098_ (
    .A(_0476_),
    .B(_0481_),
    .Y(_0496_)
  );
  NOT _1099_ (
    .A(_0496_),
    .Y(_0497_)
  );
  NOR _1100_ (
    .A(_0497_),
    .B(_0480_),
    .Y(_0498_)
  );
  NOT _1101_ (
    .A(_0498_),
    .Y(_0499_)
  );
  NOT _1102_ (
    .A(contador_BC[26]),
    .Y(_0500_)
  );
  NOR _1103_ (
    .A(_0500_),
    .B(_0468_),
    .Y(_0501_)
  );
  NAND _1104_ (
    .A(_0501_),
    .B(_0465_),
    .Y(_0502_)
  );
  NOR _1105_ (
    .A(_0502_),
    .B(_0499_),
    .Y(_0503_)
  );
  NAND _1106_ (
    .A(_0503_),
    .B(_0459_),
    .Y(_0504_)
  );
  NAND _1107_ (
    .A(_0504_),
    .B(reset),
    .Y(_0505_)
  );
  NOR _1108_ (
    .A(_0505_),
    .B(_0495_),
    .Y(_0005_[26])
  );
  NOT _1109_ (
    .A(_0504_),
    .Y(_0506_)
  );
  NOR _1110_ (
    .A(_0506_),
    .B(contador_BC[27]),
    .Y(_0507_)
  );
  NAND _1111_ (
    .A(_0506_),
    .B(contador_BC[27]),
    .Y(_0508_)
  );
  NAND _1112_ (
    .A(_0508_),
    .B(reset),
    .Y(_0509_)
  );
  NOR _1113_ (
    .A(_0509_),
    .B(_0507_),
    .Y(_0005_[27])
  );
  NOT _1114_ (
    .A(_0508_),
    .Y(_0510_)
  );
  NOR _1115_ (
    .A(_0510_),
    .B(contador_BC[28]),
    .Y(_0511_)
  );
  NAND _1116_ (
    .A(_0510_),
    .B(contador_BC[28]),
    .Y(_0512_)
  );
  NAND _1117_ (
    .A(_0512_),
    .B(reset),
    .Y(_0513_)
  );
  NOR _1118_ (
    .A(_0513_),
    .B(_0511_),
    .Y(_0005_[28])
  );
  NOT _1119_ (
    .A(contador_BC[29]),
    .Y(_0514_)
  );
  NAND _1120_ (
    .A(_0512_),
    .B(_0514_),
    .Y(_0515_)
  );
  NAND _1121_ (
    .A(_0515_),
    .B(reset),
    .Y(_0516_)
  );
  NOR _1122_ (
    .A(_0512_),
    .B(_0514_),
    .Y(_0517_)
  );
  NOR _1123_ (
    .A(_0517_),
    .B(_0516_),
    .Y(_0005_[29])
  );
  NOT _1124_ (
    .A(contador_BC[30]),
    .Y(_0518_)
  );
  NOT _1125_ (
    .A(_0517_),
    .Y(_0519_)
  );
  NAND _1126_ (
    .A(_0519_),
    .B(_0518_),
    .Y(_0520_)
  );
  NAND _1127_ (
    .A(_0520_),
    .B(reset),
    .Y(_0521_)
  );
  NOR _1128_ (
    .A(_0519_),
    .B(_0518_),
    .Y(_0522_)
  );
  NOR _1129_ (
    .A(_0522_),
    .B(_0521_),
    .Y(_0005_[30])
  );
  NOT _1130_ (
    .A(_0522_),
    .Y(_0523_)
  );
  NAND _1131_ (
    .A(_0523_),
    .B(contador_BC[31]),
    .Y(_0524_)
  );
  NOR _1132_ (
    .A(_0524_),
    .B(_0007_),
    .Y(_0005_[31])
  );
  DFF _1133_ (
    .C(clk_32f),
    .D(_0006_[0]),
    .Q(data_serial_paralelosintetizadosintetizadosintetizadosintetizadosintetizadoTX[0])
  );
  DFF _1134_ (
    .C(clk_32f),
    .D(_0006_[1]),
    .Q(data_serial_paralelosintetizadosintetizadosintetizadosintetizadosintetizadoTX[1])
  );
  DFF _1135_ (
    .C(clk_32f),
    .D(_0006_[2]),
    .Q(data_serial_paralelosintetizadosintetizadosintetizadosintetizadosintetizadoTX[2])
  );
  DFF _1136_ (
    .C(clk_32f),
    .D(_0006_[3]),
    .Q(data_serial_paralelosintetizadosintetizadosintetizadosintetizadosintetizadoTX[3])
  );
  DFF _1137_ (
    .C(clk_32f),
    .D(_0006_[4]),
    .Q(data_serial_paralelosintetizadosintetizadosintetizadosintetizadosintetizadoTX[4])
  );
  DFF _1138_ (
    .C(clk_32f),
    .D(_0006_[5]),
    .Q(data_serial_paralelosintetizadosintetizadosintetizadosintetizadosintetizadoTX[5])
  );
  DFF _1139_ (
    .C(clk_32f),
    .D(_0006_[6]),
    .Q(data_serial_paralelosintetizadosintetizadosintetizadosintetizadosintetizadoTX[6])
  );
  DFF _1140_ (
    .C(clk_32f),
    .D(_0006_[7]),
    .Q(data_serial_paralelosintetizadosintetizadosintetizadosintetizadosintetizadoTX[7])
  );
  DFF _1141_ (
    .C(clk_32f),
    .D(_0001_),
    .Q(active_serial_paralelosintetizadosintetizadosintetizadosintetizadosintetizadoTX)
  );
  DFF _1142_ (
    .C(clk_32f),
    .D(_0000_),
    .Q(IDLEOut)
  );
  DFF _1143_ (
    .C(clk_32f),
    .D(_0002_[0]),
    .Q(buffer[0])
  );
  DFF _1144_ (
    .C(clk_32f),
    .D(_0002_[1]),
    .Q(buffer[1])
  );
  DFF _1145_ (
    .C(clk_32f),
    .D(_0002_[2]),
    .Q(buffer[2])
  );
  DFF _1146_ (
    .C(clk_32f),
    .D(_0002_[3]),
    .Q(buffer[3])
  );
  DFF _1147_ (
    .C(clk_32f),
    .D(_0002_[4]),
    .Q(buffer[4])
  );
  DFF _1148_ (
    .C(clk_32f),
    .D(_0002_[5]),
    .Q(buffer[5])
  );
  DFF _1149_ (
    .C(clk_32f),
    .D(_0002_[6]),
    .Q(buffer[6])
  );
  DFF _1150_ (
    .C(clk_32f),
    .D(_0002_[7]),
    .Q(buffer[7])
  );
  DFF _1151_ (
    .C(clk_32f),
    .D(_0003_[0]),
    .Q(buffer_pasado[0])
  );
  DFF _1152_ (
    .C(clk_32f),
    .D(_0003_[1]),
    .Q(buffer_pasado[1])
  );
  DFF _1153_ (
    .C(clk_32f),
    .D(_0003_[2]),
    .Q(buffer_pasado[2])
  );
  DFF _1154_ (
    .C(clk_32f),
    .D(_0003_[3]),
    .Q(buffer_pasado[3])
  );
  DFF _1155_ (
    .C(clk_32f),
    .D(_0003_[4]),
    .Q(buffer_pasado[4])
  );
  DFF _1156_ (
    .C(clk_32f),
    .D(_0003_[5]),
    .Q(buffer_pasado[5])
  );
  DFF _1157_ (
    .C(clk_32f),
    .D(_0003_[6]),
    .Q(buffer_pasado[6])
  );
  DFF _1158_ (
    .C(clk_32f),
    .D(_0003_[7]),
    .Q(buffer_pasado[7])
  );
  DFF _1159_ (
    .C(clk_32f),
    .D(_0004_[0]),
    .Q(contador[0])
  );
  DFF _1160_ (
    .C(clk_32f),
    .D(_0004_[1]),
    .Q(contador[1])
  );
  DFF _1161_ (
    .C(clk_32f),
    .D(_0004_[2]),
    .Q(contador[2])
  );
  DFF _1162_ (
    .C(clk_32f),
    .D(_0004_[3]),
    .Q(contador[3])
  );
  DFF _1163_ (
    .C(clk_32f),
    .D(_0004_[4]),
    .Q(contador[4])
  );
  DFF _1164_ (
    .C(clk_32f),
    .D(_0004_[5]),
    .Q(contador[5])
  );
  DFF _1165_ (
    .C(clk_32f),
    .D(_0004_[6]),
    .Q(contador[6])
  );
  DFF _1166_ (
    .C(clk_32f),
    .D(_0004_[7]),
    .Q(contador[7])
  );
  DFF _1167_ (
    .C(clk_32f),
    .D(_0004_[8]),
    .Q(contador[8])
  );
  DFF _1168_ (
    .C(clk_32f),
    .D(_0004_[9]),
    .Q(contador[9])
  );
  DFF _1169_ (
    .C(clk_32f),
    .D(_0004_[10]),
    .Q(contador[10])
  );
  DFF _1170_ (
    .C(clk_32f),
    .D(_0004_[11]),
    .Q(contador[11])
  );
  DFF _1171_ (
    .C(clk_32f),
    .D(_0004_[12]),
    .Q(contador[12])
  );
  DFF _1172_ (
    .C(clk_32f),
    .D(_0004_[13]),
    .Q(contador[13])
  );
  DFF _1173_ (
    .C(clk_32f),
    .D(_0004_[14]),
    .Q(contador[14])
  );
  DFF _1174_ (
    .C(clk_32f),
    .D(_0004_[15]),
    .Q(contador[15])
  );
  DFF _1175_ (
    .C(clk_32f),
    .D(_0004_[16]),
    .Q(contador[16])
  );
  DFF _1176_ (
    .C(clk_32f),
    .D(_0004_[17]),
    .Q(contador[17])
  );
  DFF _1177_ (
    .C(clk_32f),
    .D(_0004_[18]),
    .Q(contador[18])
  );
  DFF _1178_ (
    .C(clk_32f),
    .D(_0004_[19]),
    .Q(contador[19])
  );
  DFF _1179_ (
    .C(clk_32f),
    .D(_0004_[20]),
    .Q(contador[20])
  );
  DFF _1180_ (
    .C(clk_32f),
    .D(_0004_[21]),
    .Q(contador[21])
  );
  DFF _1181_ (
    .C(clk_32f),
    .D(_0004_[22]),
    .Q(contador[22])
  );
  DFF _1182_ (
    .C(clk_32f),
    .D(_0004_[23]),
    .Q(contador[23])
  );
  DFF _1183_ (
    .C(clk_32f),
    .D(_0004_[24]),
    .Q(contador[24])
  );
  DFF _1184_ (
    .C(clk_32f),
    .D(_0004_[25]),
    .Q(contador[25])
  );
  DFF _1185_ (
    .C(clk_32f),
    .D(_0004_[26]),
    .Q(contador[26])
  );
  DFF _1186_ (
    .C(clk_32f),
    .D(_0004_[27]),
    .Q(contador[27])
  );
  DFF _1187_ (
    .C(clk_32f),
    .D(_0004_[28]),
    .Q(contador[28])
  );
  DFF _1188_ (
    .C(clk_32f),
    .D(_0004_[29]),
    .Q(contador[29])
  );
  DFF _1189_ (
    .C(clk_32f),
    .D(_0004_[30]),
    .Q(contador[30])
  );
  DFF _1190_ (
    .C(clk_32f),
    .D(_0004_[31]),
    .Q(contador[31])
  );
  DFF _1191_ (
    .C(clk_32f),
    .D(_0005_[0]),
    .Q(contador_BC[0])
  );
  DFF _1192_ (
    .C(clk_32f),
    .D(_0005_[1]),
    .Q(contador_BC[1])
  );
  DFF _1193_ (
    .C(clk_32f),
    .D(_0005_[2]),
    .Q(contador_BC[2])
  );
  DFF _1194_ (
    .C(clk_32f),
    .D(_0005_[3]),
    .Q(contador_BC[3])
  );
  DFF _1195_ (
    .C(clk_32f),
    .D(_0005_[4]),
    .Q(contador_BC[4])
  );
  DFF _1196_ (
    .C(clk_32f),
    .D(_0005_[5]),
    .Q(contador_BC[5])
  );
  DFF _1197_ (
    .C(clk_32f),
    .D(_0005_[6]),
    .Q(contador_BC[6])
  );
  DFF _1198_ (
    .C(clk_32f),
    .D(_0005_[7]),
    .Q(contador_BC[7])
  );
  DFF _1199_ (
    .C(clk_32f),
    .D(_0005_[8]),
    .Q(contador_BC[8])
  );
  DFF _1200_ (
    .C(clk_32f),
    .D(_0005_[9]),
    .Q(contador_BC[9])
  );
  DFF _1201_ (
    .C(clk_32f),
    .D(_0005_[10]),
    .Q(contador_BC[10])
  );
  DFF _1202_ (
    .C(clk_32f),
    .D(_0005_[11]),
    .Q(contador_BC[11])
  );
  DFF _1203_ (
    .C(clk_32f),
    .D(_0005_[12]),
    .Q(contador_BC[12])
  );
  DFF _1204_ (
    .C(clk_32f),
    .D(_0005_[13]),
    .Q(contador_BC[13])
  );
  DFF _1205_ (
    .C(clk_32f),
    .D(_0005_[14]),
    .Q(contador_BC[14])
  );
  DFF _1206_ (
    .C(clk_32f),
    .D(_0005_[15]),
    .Q(contador_BC[15])
  );
  DFF _1207_ (
    .C(clk_32f),
    .D(_0005_[16]),
    .Q(contador_BC[16])
  );
  DFF _1208_ (
    .C(clk_32f),
    .D(_0005_[17]),
    .Q(contador_BC[17])
  );
  DFF _1209_ (
    .C(clk_32f),
    .D(_0005_[18]),
    .Q(contador_BC[18])
  );
  DFF _1210_ (
    .C(clk_32f),
    .D(_0005_[19]),
    .Q(contador_BC[19])
  );
  DFF _1211_ (
    .C(clk_32f),
    .D(_0005_[20]),
    .Q(contador_BC[20])
  );
  DFF _1212_ (
    .C(clk_32f),
    .D(_0005_[21]),
    .Q(contador_BC[21])
  );
  DFF _1213_ (
    .C(clk_32f),
    .D(_0005_[22]),
    .Q(contador_BC[22])
  );
  DFF _1214_ (
    .C(clk_32f),
    .D(_0005_[23]),
    .Q(contador_BC[23])
  );
  DFF _1215_ (
    .C(clk_32f),
    .D(_0005_[24]),
    .Q(contador_BC[24])
  );
  DFF _1216_ (
    .C(clk_32f),
    .D(_0005_[25]),
    .Q(contador_BC[25])
  );
  DFF _1217_ (
    .C(clk_32f),
    .D(_0005_[26]),
    .Q(contador_BC[26])
  );
  DFF _1218_ (
    .C(clk_32f),
    .D(_0005_[27]),
    .Q(contador_BC[27])
  );
  DFF _1219_ (
    .C(clk_32f),
    .D(_0005_[28]),
    .Q(contador_BC[28])
  );
  DFF _1220_ (
    .C(clk_32f),
    .D(_0005_[29]),
    .Q(contador_BC[29])
  );
  DFF _1221_ (
    .C(clk_32f),
    .D(_0005_[30]),
    .Q(contador_BC[30])
  );
  DFF _1222_ (
    .C(clk_32f),
    .D(_0005_[31]),
    .Q(contador_BC[31])
  );
endmodule
